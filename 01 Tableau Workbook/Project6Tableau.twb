<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' inline='true' name='oracle.42117.727783518516' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[TOP100DIAGNOSES].[PROVIDER_STATE]'>
              </expression>
              <expression op='[STATELIST].[STATEABBREV]'>
              </expression>
            </expression>
          </clause>
          <relation name='TOP100DIAGNOSES' table='[C##CS329E_JDO589].[TOP100DIAGNOSES]' type='table' />
          <relation name='STATELIST' table='[C##CS329E_JDO589].[STATELIST]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DRG_DEFINITION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG_DEFINITION]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>DRG_DEFINITION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITAL_REFERRAL_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HOSPITAL_REFERRAL_REGION]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>HOSPITAL_REFERRAL_REGION</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DISCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_DISCHARGES]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>TOTAL_DISCHARGES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_COVERED_CHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_COVERED_CHARGES]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_COVERED_CHARGES</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_MEDICARE_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_MEDICARE_PAYMENTS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_MEDICARE_PAYMENTS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATENAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATENAME]</local-name>
            <parent-name>[STATELIST]</parent-name>
            <remote-alias>STATENAME</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>14</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEABBREV</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEABBREV]</local-name>
            <parent-name>[STATELIST]</parent-name>
            <remote-alias>STATEABBREV</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
      </column>
      <column caption='Hospital Referral Region' datatype='string' name='[HOSPITAL_REFERRAL_REGION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='real' name='[PROVIDER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='real' default-format='*00000' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
      </column>
      <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:STATEABBREV:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PROVIDER_STATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' inline='true' name='oracle.42117.728924085648' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation name='TOBACCOUSAGE' table='[C##CS329E_JDO589].[TOBACCOUSAGE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_ESTIMATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_95_CI_LOWER_</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_95_CI_UPPER_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_ESTIMATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_95_CI_LOWER_</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_95_CI_UPPER_</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_ESTIMATE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_95_CI_LOWER_</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_95_CI_UPPER_</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_ESTIMATE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_95_CI_LOWER_</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_95_CI_UPPER_</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[X12_17_ESTIMATE]' derivation='Min' name='[min:X12_17_ESTIMATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[X12_17_ESTIMATE]' derivation='None' name='[none:X12_17_ESTIMATE:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[min:X12_17_ESTIMATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;0.1075&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;0.1307&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1112&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1365&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.104&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1153&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1485&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.0976&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.1239&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.0881&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.1212&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.0868&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1203&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1685&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.0693&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1156&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1491&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1078&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1093&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1313&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.11&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1134&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1407&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1009&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1268&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.0906&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.1231&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.0873&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.1205&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1007&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1252&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.0753&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1157&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1512&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1066&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1272&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.0942&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.1235&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.0959&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.1238&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.086&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1137&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1421&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.0764&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1161&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1649&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.103&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1138&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1438&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:X12_17_ESTIMATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;0.1075&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;0.1307&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1112&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1365&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.104&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1153&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1485&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.0976&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.1239&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.0881&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.1212&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.0868&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1203&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1685&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.0693&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1156&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1491&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1078&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1093&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1313&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.11&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1134&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1407&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1009&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1268&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.0906&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.1231&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.0873&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.1205&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1007&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1252&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.0753&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1157&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1512&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1066&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1272&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.0942&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.1235&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.0959&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.1238&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.086&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1137&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1421&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.0764&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1161&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1649&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.103&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1138&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1438&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42117.727783518516'>
      <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42117.728924085648'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42117.728924085648' target='oracle.42117.727783518516'>
      <column-mapping>
        <map key='[oracle.42117.728924085648].[none:STATE:nk]' value='[oracle.42117.727783518516].[none:STATENAME:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Covered Charges vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_COVERED_CHARGES]' derivation='Avg' name='[avg:AVERAGE_COVERED_CHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.728924085648].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.728924085648].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.42117.727783518516].[Longitude (generated)]' field-type='quantitative' max='-6045602.5575647093' min='-19063009.369585562' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.42117.727783518516].[Latitude (generated)]' field-type='quantitative' max='10435492.288677137' min='1276816.7816481786' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42117.728924085648].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Avg Discharge vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TOTAL_DISCHARGES]' derivation='Avg' name='[avg:TOTAL_DISCHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.728924085648].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.728924085648].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <text column='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42117.728924085648].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Avg Medicare Payments vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_MEDICARE_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.728924085648].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.728924085648].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42117.728924085648].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Avg Total Payment vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.728924085648].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.728924085648].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42117.728924085648].[STATE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Payments vs. States'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
            </column>
            <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AVERAGE_COVERED_CHARGES]' derivation='Avg' name='[avg:AVERAGE_COVERED_CHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AVERAGE_MEDICARE_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TOTAL_DISCHARGES]' derivation='Sum' name='[sum:TOTAL_DISCHARGES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.728924085648].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Virginia&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.728924085648].[none:STATE:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42117.728924085648].[none:STATE:nk]' value='67' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[oracle.42117.727783518516].[sum:TOTAL_DISCHARGES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk] + ([oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk] + ([oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk] + [oracle.42117.727783518516].[sum:TOTAL_DISCHARGES:qk])))</rows>
        <cols>[oracle.42117.728924085648].[none:STATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tobacco User (18-25)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TOTAL_DISCHARGES]' derivation='Avg' name='[avg:TOTAL_DISCHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column aggregation='CountD' caption='X18 25 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_ESTIMATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[X18_25_ESTIMATE]' derivation='None' name='[none:X18_25_ESTIMATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AL&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;GA&quot;' />
              <groupfilter from='&quot;IA&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <text column='[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]' />
              <text column='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Payment vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]'>
            <groupfilter from='&quot;AK&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;WY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42117.728924085648].[none:STATE:nk] / [oracle.42117.727783518516].[none:STATEABBREV:nk])</rows>
        <cols>[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Comparing AK,CA,DE'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1169' minheight='600' minwidth='1169' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99658' x='0' y='0'>
                <zone h='47049' id='1' name='Avg Discharge vs. State' show-title='true' w='49830' x='0' y='0'>
                </zone>
                <zone h='47049' id='7' name='Avg Total Payment vs. State' show-title='true' w='49828' x='49830' y='0'>
                </zone>
                <zone h='52951' id='9' name='Avg Covered Charges vs. State' show-title='true' w='49830' x='0' y='47049'>
                </zone>
                <zone h='52951' id='11' name='Avg Medicare Payments vs. State' show-title='true' w='49828' x='49830' y='47049'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Payments vs. States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42117.728924085648].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:DRG_DEFINITION:nk]</field>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728355231484].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.728355231484].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_OR_OLDER_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tobacco User (18-25)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Comparing AK,CA,DE'>
      <zones>
        <zone name='Avg Discharge vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Total Payment vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Covered Charges vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Medicare Payments vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='1' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Discharge vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' type='size' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Total Payment vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' type='size' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Covered Charges vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Medicare Payments vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Payment vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.728924085648].[:Measure Names]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_OR_OLDER_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X26_OR_OLDER_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Payments vs. States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tobacco User (18-25)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparing AK,CA,DE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29aYxk15Um9r0t9oiMXGpfuZNFiqRIUeKq1gJJHrU03TM2LLsHHozdBtrL
      D2MG9k8DcgMGvHT3tDGexmDaPWq0ujUtqSVKokiREjdxKRZZXIpLVbE21sJas7IyI2OPeBHv
      +UfUd/PEjfsiIiuzqrIy4wMSkfHiLfe9d869Zz9WGIYhRhhhjcK+3gMYYYTriREDjLCmMWKA
      EdY0uhigUZ7Fx8c+7XtAuzaPn/3kh/j5M8+jWPNx4L23UPZ799u/5zm8+8nMsg5WjaFZxfPP
      /BzPv/4umrUyyrVm1+/FQgGtILgq1x7hBkfYwgcf7Ac1X+e73/3ud/nbh288j2de34/P3rEF
      7x48Ba8+jWNnZ/HKC8/iyNkCbrtlB9rli3jmjY/x+K5JPPXqfhRPn8D4uhyeefo5TG3ejgN7
      f4tX3z0MqzaN198+gHIjxMaUj//4D0/ByUzhxEd7sPvNffCbZfzm+ZfQsJOYPfkhXnjtXWzc
      vhPpuId339yN7Lr1eOvNvTh79H28e2wGd9y8Td3D7MkP8dTrR/HQA/fgjV9+H8/uOYRNE0k8
      9cyvkclm8Vf/9s9xtuZh0q3i50//BvH8RkyNpa/1ox5hBWL21Ef4d9//BT77yBfwzp49CytA
      0Kph9zsfYyycxbG5EEf3vYlnXngdTv0C9n10GB8fPg5YnX29eAq33H476vMVBI0iLs3OotG2
      MHt6P947UcOXHvksXMvC3Q8+hqOvv4TpWhVzF07h58++gP0f7MM9X3gCpz56Gyc+OYwjn3yM
      7/3NT3HswF788sW3AQDjsSZ+9uMf4ZKfwoXpacQcB4GwVU3uvBfffORW/OJnv8Lkho24/wuP
      w2lVceHUIfzqtQ+wft16PPbwg/jb7/17fHr6BP7uRz+/pg95hJWLV3/7Gu66ZR1efmM/2rOn
      Fhjg/NF98JMbcNstO7H7tTfxxc/djMTWe7Ehl0Ct4WP95Bha7c6+Zw6/g3/9F3+Lx77yRXiu
      i2QqhUunD+OTS21Uz+3H3z/5LOqtANmxcYylkzj00bso+jbCRh1tN4H1E2NIxhz4TgqT4+tw
      +02bkBrfiq998QEAwM77HkH5UgFfefQepOIe3tr9Go4cfA97D5wEANRnT+OF3ftgeTGsW78O
      b7z4LF59fTd8O4lGrYYNE0k889xLuP2OXXCcOL71u9+49k96hBWHZuk8Dl9oYOctd+Dw26/h
      81/+MqxBfoD5c4fwVz94GlZ8DH/03/0hUu7yDObdV57BK+8dxPqbHsIf/OMvLs9JRxhhkRjI
      ACOMsJqh5vN2u41gZDkZYRXC8zwAQBiGaLVaXb8pBqhUKojFYj0Hh2GIer2OVquFIAgUk9i2
      DdPiYVnWFQ+U57MsC+VyGZlMpmcf3/dh2wvWW9u21fcrWcwsy4LjOGi322g2O+ZUPjDLshCG
      IcIwNN4Xt8diMTQaDbWPvr/8Ls/Hv+VYhG3bRiaT6RmnfKZyW7VaRbvdhmVZXROfPla+51gs
      Bs/z4DjOUO+4Uqn0EFsU+Ex4H/32IziGeDyORCIReUy1WsXExAQAoNFooNVqwXUX5Hj1n2VZ
      kSdKJBLwfR+1Wi3ypuSLlA+Q34Mg6Hrh+kMMgqCHkEmIEo7jqAfWaDQQi8X6PjR9HLw2X2oy
      mYTjOPB9H+VyGWEYotlswvO8nnvSiZUE4jgOYrGYukfTM+H+PM9ywrIsZLPZrhfbD/V6HWEY
      Ih6PI5vNolQqdb1X+Zzke/F9H67r9iU4wnVd1Ot1Nan0QxAE6p3yHkw0It8df8vlcn3fv+93
      O6ni8XgXXUU+sTAM4fs+Go0GUqkUPM9TD8OyrJ4ZT3/R8lPOdnI7f5Of+nb9QcjzyIelnyNq
      m+M4iMfjinF4L9VqFZ7nIZFIoFgsqpWG++gPXr4MEs8gwtbHErWyRO1vWRY8z1PvxnVdBEGA
      dDo9NPG3Wi1Uq1VYlqXuL5fLodFooFKp9DCovgq22+2B4wY6RE3iN71vuZ3nNU0YOiStpdPp
      gZPfIBifWqvV6uJezmye56Fer6PdbqvB9JvVdUaQx5gIe9D/OlHbto0gCHpevv7g+LIpIliW
      pQiIszdnfM4YsVgMvu+j1WopohsEE1Fwm+M4CIIAnueh2WwOJPx+Lz+dTqtzOI5jXClNCIJA
      rXJA5z2322202220Wi31bLLZLCqViiJKgrP/MCsYGSUK+m8k5H6iom3baLfbsG0b2WwWjuMM
      dd/9xuDqG5rNJiqVSteOpVJp6BPKhyO5U8qZVyoG6DOw4zio1WpoNBpIp/t7eoMgQKPRUIST
      TqeNqwQZgA8aQJeoReLzfX+oWRwAstms2ocrCyeVKEInXNftEU84Rt/3hyZ+HquPtVwuqwnN
      siy4rgvLspDJZHrkeMdxhp5xY7EYarXakvQbnZY4gSQSiaF1kSi0222USqVuBmi1WiiXy4ta
      yk3bpPzIwUv5nqKUJCApXklELZ/8nkql0Gw2B+oVFHX4P2dP3/fhOA5KpRI8z4Pv++o3Xj8e
      j6PRaMDzPFQqFaTTaQRBMLSSxwkkSieQ49WJ1HVdJU9T4S6Xy0gmk0alN+rZEfF4XM32lL3l
      /pz1yQy8x3g8jng8PjTRcWXluCm2mXQpoEOQ8Xi8531zGwl+GJ2vHyialUqlzj3KHz3PQz6f
      V7NqlMw6zEPoty+5WaLfciblUHnzvEar1eqyYHE7xQ5d5IrH44r4m80mEokEgiBQsrG8Jj/j
      8bgiej6bxc5AUbO9rmxK1Ot1JeLFYjE1nkajgTAMkUwmIwkiCAIUCgV4ngfbtuH7ftfzyGaz
      qNVqXSJtu91GrVZDKpVCMpmE7/tot9tq1l0M0uk02u22Urrl+HnPfIaxWKxLZJZ6XjweX9R1
      +4FGi1QqhUaj0R0NSk6jpYXbpKgwLPeZFF7T+aKUY/08pmubFOgo3UJet9lsolqtIgxDeJ6H
      YrFoZC6uVgQfHlcN3cLQDyaZV967XBF1yOtI4qnVal0ijI5isaiOJ8PwnhzHgeu6yGQyPZNb
      s9lU+l8ul0M6nb4icUO+XxK//gy4n+m4ZDJpNM0vFTy34zjdK4DkRj4wWhoAIJVKqZly0AXk
      ZwgLc9UQYQhMpB1YiLba6AQctfJIwo7FYmg2m10PS84wOoO1Wq0ef4J+3kHjajQacBwHrVar
      Z4zSekTImZrH1Wq1rmtEPRNuTyQS6tlLnWJ+fh7ZbLZHH5Bj5qfneUr55Uqm6xlhGCr5P51O
      L2kGppIunxWALpFXF39Jb8PoV1cCSedGK5DjOMjn8z12baCzJC8Wn1xs4/RcZ5baOObgjg12
      j1gCRN9wv4fAF0jZTi6lkvB12bMfoQ36X55DJzo6C+WsTYWQYwWgHDLJZFJZ3XSxUBIExTap
      S8n7azabSoElstmsYlTK0pZlKbu/nMhMz4Ai01Jkbtu21YTKc5vEPt06aNv20KbdK0UsFuuf
      ESaXabmUmWASmYDO7D9dXFiiZ8pttILeFwhEE7o+M5hAQpTmPF2el+eLupbJdCvHoB/L++X+
      fHGxWKxr2ednq9VSsy0Jv9VqGa0altWxxmSzWSWPUzThvpz5m80m5ufnu8QhHs/VhwyUyWS6
      ZlzTPQFQ5tGlWHKoX8lzy/djogP+HyXaLRcsyxo+JZIzbD/PnkmGtQDkkguXycRtOPbCzUtL
      RBRhDqt804ojx8zj1XgM15XHu64b+cKjZFV5Xnk9bvM8L3Li4DPVzapU1GKxmLK+UBmlXyKV
      SsF1XbWfHA/vvVKpGA0OmUymRy5PJpPKH8LVn7rSlUKueqZnqDOEZIyrvQIAfTzBHFy9Xlex
      MnwYUYqrmUBD3LnJxZlCgDAEtuRtWDDbz00Ksz57DxJX9GXUtMzK/UkcfFGJRAKFQsE4Fv38
      cruJ+amf0Kbe82QM98cx8VgJhiBQiSVj0KGn31e5XEYulzO+Fzo15RjoT6nX64ohk8nkkuVw
      3Segrzz6+6W+czUYgGEuRN8VgCaxcrmsFDZ9ppMPXIoBx48eBawmzn56CTHXxk1TLm5e5+Li
      6U/QhqNeWr9ANtMDi7IqkZAZskHoeoDOwNJHUavVUCgU1HZ5vHpgl0MHcrlcT0yMLnpJ9BPf
      dKYcZPpLp9PK8Ver1VAqlYxe23w+3yXq6EyayWQUMdAKValUkEwmVZiByTezWDiOg2w2G/nu
      9O2O4wztcV4sdJ2tbyyQFHd0AtI/peMo9AvY/dKLaI99Ax/+9iB2v3wO41u249ipaaSaM1h/
      1+PYnq3j7SMF/Ff/+TcBRMv/UhHXTZU8TjIivcNyPPqnafWS9wlAKaiU0ekZzmQycBwHzWbT
      aCTQr0Gni25lkROHTrjpdHooTycVWbkCkKBs21azbiwWU7/Te0xGTSQSal86FCuVigquYyjI
      UmGK2tX1GY41lUotOcwhCvozjWQAmun02YkwWXCII++/g3Ymh7279yCYKeB4cRrbnRwKFy+g
      blVhzRYwf+IYTpzr1SdMYkrU4OV2eX3btpVFSM70PL++Cuj3YVkd51qz2UQmk1FyOmflYrHY
      E55geg6EyWOsMyLHNyzx856SyWTXbFmr1RAEATKZjFq16/W6IkAq3GRkilmZTEaFC/u+j2q1
      qvZZDti2jVQqhXK5rJ6HroNETShXC2EYRjMAzVZRMBEPladNtz+If/65cRQLMwgfB2bm57Fu
      Io/pmQKmJsdgOy7q5VvwiJNSA+nHaDJ2ZtCYwrDjtW232/B9X73gQYq2fl/yf4YBBEHQJW5E
      6QmDtunH8rnRWjMsEVBRlpDBgdLjLnM52u02yuUystlsl6hHkY7WHzr8loMJLGshjIHmWtPE
      w/+vFSJ1gH4vM8pUSCLN5vJo10s4Nz2PbD6NMHQwNjGFbRvzOHtxFg7aqCGJ7Zs2dAYhxBp9
      ZpbEPwxhSDnasqyuOCESnpQ79e8U5xKJhFIAw7ATxyKDw/pZpkwvcpBlyXGcvmENwyKVSqmV
      Smd+ORaZAKSDCjaAZTVFchXQRSH9/S6HyDUsIlcAKlmm0N2oGVl+v3TpEqYP/BavvDOGjNXG
      xh078d4LP8OF5F048s6bmPctjP+zP8CYGz3zS3ElCv1kewaRcUbUoydJ3PJeKFbIhBiZLCOP
      pV5gWjWiGETXWbjNFCpwJZAMJG34ukEBgEpwcl1XeWslrgYhMhhPShhyReRzvxawrD5+AMqM
      tNSYNHaT+YrIphLAunuwyaohHa/i9Fwdtz7wVbjFo8is34SZ6UsIYBYhJPHo8TlRN2IiQqDD
      BI1GQwV18XdJ+FJBY5js/Pw8CoUCCoUCSqVSl7mUY1nMbG1ZHa+xLrIQi4m0HAbtdtsouugi
      EZOB+DxMFrTlBEWtXC6HbDbbY+26WspvFHpWABntSOIhpBhhWhW4DwDMXppGcW4aD33l6/j4
      0HFstItousD6Hffijq055Ddsw4TXMYfSCgF0z/zT09MIggCTk5NqFpeh1BJRogidWwBUAJtp
      ltFXNBYJIIOY5HYdg8bkum5XRpWMgVnuF89gNzkWOYHJZ8h7lFlwvJ9Lly5hampqWccmx0Wz
      NcWxq2X+NKHZbPYyAJd2aSGoVqtIJBLKjR8llnBW9DwPm2++G7fe8xCCIMCGdZ0HGIvFsOPm
      zoqy47YFm7nMaqIFhhGpvu9jdnYW+XxeXaNerxtnUj1uxZRnLDOVSBTtdrvrRZw5cwbxeBxb
      t26NXHVkcrVldZL4KTZKZpGmvkQioaI35fNbLvFHt3DRYyx1KmkulasZjQcSzWZTmYGvllfW
      sixl9hwk7i4n6vU6KpVKLwM4joNcLqe+0wLCgxhrQ8hBZzIZtWrQPNdsNlUyiR5WK4/tSlS+
      7AgKggCVSgW5XA71eh25XA4zMzNIJpOo1WoYGxszWlOA7hnO9GAlkTYaDbUS7d+/Hw8++CCm
      p6dh2zZOnToFANi4cSPOnz8Pz/MwNTWFs2fPYnx8HIlEAufOnUOj0cDGjRsxOzuLbdu2dRET
      JxJmNMlVhfe7nJAmUZOJVteVooiu2WyqqNGlZmD1g8madbXBkJJFmRwGmRJrtRrm5+e73M2W
      1ckxNWUvDTJH0l49MTEB13Vx8eJFpFIpZDIZ+L7fFfejm1GjLFW6lQlAl4jDmWhqakqZAM+f
      P4+LFy8il8uhVCrB931kMhkcO3YMx48fx2233abCRRzHwenTp3vuLwwXklh0YtJ1q6WA56WV
      J4rY+Rz4nWERBCNamXcwbPbbjQTHcRbHABRVMpmMyhDyPE8Ru1SwKCrx9yudPWzbRiKRwMTE
      BCYmJlR+7eTkJAqFQo9NXl/y5UuW+oVuCiU8z8O5c+fwwQcf4Pz58ygWiypAjqvEqVOn1Grj
      eR4uXrwI3/dx8uRJxGKxrrRCeV0Jua3dbqNSqSxL4Jm0XPUzWOhm4EajoSxd7XZbJQmlUimU
      SqUlj22lQpVGLJVKyGazfXfWHwBnPN3VT3d+pVJREYtLBV8S7fq2baPRaGB2dhZTU1NGi5Rk
      jChRgMwqbebFYhHxeBzJZBKFQqErM4lMziQU13VRLBaRyWTULJpKpdR9z83Ndd2/VLZN4uDY
      2NiyKMRh2Alp4POS19N1IAmOlRYzhnwkk8lF1R5aKZB0zcDOoeoCmWCyanDGoMLJSl1yuV8O
      UImk6ENlm7HwsvydHKuJ8PvdE4kQ6BCr1IeABd1ChglQvKMFgxa0ZrOpqk/ohBg1O9P7ulRY
      ltXly5HX0VdJ+V0mzMtVjJmAzCVYLVjSnfDFMjw3nU4jkUigVCqp+kHLvWzqyR1jY2Mq95Vj
      4gvURQ85A+piU797lOeR59WZTDJTuVxW45SFszzPU2Icbe9yHEuVtfXx9osqlfek+zkkI5MZ
      WB5zNWFJ6xllV8uyuuJlABitPssBLmHtdlvZ1R3H6ardQ4aUhKC/WGLQ+KQopTu/+llRTExj
      WZZKgYy6FkvT0F+x1Lh402qiz/6D9pH3x9TL1YIrWgHCMEStVkOxWFR23GQyqX5nzZrliCXX
      waWdEZ9hGGJ8fBxzc3OK+VgOhftHjcEkA8t75D5RgXhk8ijRiuHU/J3iGp1+3E+CZUTopZ2Z
      mUGhUBh65tVXEdP9m+67n8KsH7+alOFFm0HpiKpWqyrsVi6zlrV8cS1RIHExfiWRSGDjxo0o
      FovKemESS/T70H83bZfikkls0hPRJcrlcld9JZnTK6+pm2Y5cVAeZ3jGMITHJCZZ68dE7Po9
      9ZsM9GoOa5IBwrBTUrtUKqHZbCKZTGJsbKyLABYTtblU0FlGJdy2bYyPj3dFLy72RZnGLQlT
      l9d5bRNoiux3bgDGMAtgIYeAz7fVaqFQKKiJJwoM5qNY0688IZlLjlnfl/4YQtZUWg0YSpij
      yMMqapzlo8KYrxVIPGQA08vj+OV3gkqozsDyeP2cvGdZaU3qB1HihdQf5AplIiRa1aRliwxY
      q9Xg+75ifj21VBY2azQaPd5gfVz66kMRiueUz4aMQD3AFEF6o2FgUjyrBLOWPG9YKnbXCzQ9
      MpSBn/KlSYVYHgf0yre6SVDuC/Q2b9ADynhNk5nTdH2Tn0L3S5iYllWr+btt2ypWCuiEdjC7
      a5DCr//ORCIaFvjs9AmmVCqpFFGZknmjoW9OMGdWFmWSs8XVUHCvBNITzZellzOMgrwffTY0
      oZ/VR/6uf+rEQ+uVPomQuFncK2qVkJYp3re8BxK/vKdhlH2gI3qlUinkcjmlr+gV7Gje5QQZ
      j8eRSqVWBD0sFj3UEQSBKotBCw+Lqy7GfHgtYFmWKgjFWcukTEolT4os+swcpejJ/UzHyfFQ
      VAG685D5KWV0XeSSnWn0MfW7Jz3xhamNfH+sZi3PpRer4h/voV6vI5FIIBaLYWJiQhk2JDPz
      /qQoeKOAE3zXCkDvLWtCrgQiHwRJSCQOvhiTUm4yCdKX0C8kVxLHINOirNHD2X5sbExVWGBN
      Hnk9GZHaTwzrt1JxDLTTs7R6o9HoWYXIqHoeBz3YZCRTJhywUGOUhDQ/P9+VRrqSwaYgtVpN
      dIq/TCws5LTSb4Jg3gID0BhbLqvCydnNJMbQOWVK/9QJXz+nThz6SkGGZAU3qUQTTNvUnXc8
      J3WZqFUoDEOUy+WuwmVAR5wpFos9BbBMTCTPRx2DmXD6s+Q++qw/TD+w6w2aosMw7PQX4w8s
      YnqjxXmQ6PkyZAcRfT+gW3eRBMAmdzJtEugmZG43rQS6pUcSG51brONDC488Rq4aurhpqqkj
      xwIsTARyJjcRu84E+j1xLLKc+vz8fJdyT1FSrrDX2yAyLOg3UlX1rveAlgOUq2nxISPL2vmm
      ZVzfzpVEt8LoirKuHwxDAKxTxKAyrlS6paYf9GvIcbATi16GXD/edE/yuViWpRybbBwYi8V6
      qmHwk/FetL5Jc+lKhD65rAoGAHodNpTp5fJtsobosjbt+7KmkIQueshjdcuNvB4TVLLZLIrF
      IhqNhpKxo2DSBUz6AK9Rq9Xgum5XD+CoezVdS4JM0Gw2lYVH30dfvfoVFl6puLHknUUgDHsz
      r0weVNML0ztGEiYFOGplkb+TUJjPMGzJQdN19HvQx18qlbpijQYhSpyTq0GUXsT0WfbqbTab
      N5wIfWONdhGgOTeqyG2UIktw9dDbE5nMkrye6Xw6QTBfOgwXQiWixgCgZybXZXhdHIu6Jym7
      m47h/6Z74m9yDJZlKScYWzDdCBYgHatGBNLhuq7qd8sXy96/QO/LJqScHI/HuywbUTO8hF6Z
      Qj+GOoBslCHNn/q5LctCLpdTjQvldt2PYLJY6WM0FRfWwTLxzAVgVQjL6sQk6fWiaMLVmxXe
      CFi1KwAA1QROr38pLRfyT1o1SBjDhiGbrExRoBlOMhurIkTNxrrVhtci9BVBikwmpugHNtwg
      obMmKnMu6BgFoEInWE+KHef1nOSVilW7AgALjqixsTFUq1UV2zI7O2tU6gjpyeWMbWKaKHlX
      /53JO5JI9ZUikUhEWm5KpZIq+CsZlb/rZk4J3XwaJc8z75c9kRl+zSIIbEQorTyc/XlelrHh
      bzdC4szKH+EywLY7Hd6r1aoyF05OThpNkGG40BdBz2vQRY8ovUL6JHTC4/dGo6EsLb7v4+zZ
      s0ovGBsbQzweVw40zrrsEyZTQHXRSWcIec1+plpZ+l1Cmjl1gmYhMRPjMn1yJZtEgTXCAECH
      ALPZLObm5lS3EpMZU//fpGz2s3REFeTSiU+ew/M8TExMAIDywLLJBxtGlMtltZql0+meukiE
      XKGizKAmU3AYhl1+E8YBkRHl+Xke5hpIcc30DFcy1gwDAOjq3ChrdJocWZ7nqVlat7pEzaL9
      CC6K6KSIwpl2YmIC6XS6q7M60HF2TU9PI5fLdSnoUfK/vhqYLD78O3/+PMKwk17KmV42BZHH
      83xkEK56PIbPt1KpqAobKxWrWgnWQZGCiBITuC9t99xXTzM0/Unoiq5EVJNtACoCF1jo8h4E
      ARKJBDZs2IBms4lisdiz2ujQfzOtcmHYCXVIJpPI5XIqpVSKc3qOsWy9RE8xVwrmSUsH2UrG
      mloBSGSM/pRLu4wqJZFwFZD7cNbWVwK9rIj+P9BrS9fzAWhmLJfLqtQiFWgAyn/A/UqlkhKd
      wnAhf4PJ91LxJnSrEhVZFhdjlQ/eE1cZTh6O46Ber3dV3SZkO9hBRdZWCtYUAwBQhKWLAxJS
      PAIW0gEl8fM43VxJcNaOEn14vL4KtVotVV6G3lYyIUvPsOpGtVpFsVjE5s2b1bgZWsGkGsYd
      8Xd9BZRZX8BCJTjeE727HBN/N+Vf6Pd5I2DNMQAdYnoogiRMacNmR0gmmegihO6ZlfKxtAKZ
      YAof1gmKvotGo6HCqeVMPT4+jpmZGaxbt06VpCyVSmosqVSq6zrST1EqlTA3N4dt27Z1PRuW
      n6fVibHzfB4s33ijEHk/rDkGoOnTFIcjiZkzOp0+Mu+Y4pM0h0q7vh5NqtvteX7dXMl9dVA5
      5e/M2AM6ooYMw2BjDJkzHIvFMDc3p2Z1zt5hGGLjxo1d18nn8+qTDQGBBYX3WrYwuhZYcwxg
      UlSBaIVYiiIAVCUEU4yRnpnGc8j/+znPLMtSjigZhGZZlrLI+L6vElwY8UqFmonq1AXoQ6Dl
      iDoBM8Tkqsd8EOZSsBiCbdsq2M003hsda4oBovJW9VnYVO6FK4Z0numrhalson4drhRh2F3C
      XB8Dw6UJihyyjo/rusrzWq1W1T1SUaVHN5/PdzmsOG7P8+D7vvIAS6sNO+bILLbViDXFALK4
      qy6amDBon37bmTJoUnrJZJyhTefS+zTLFYgrALO2qtWqsrfbto16vY5YLKaC7EyNMqSOY4ri
      pA6z2Hu/0bB6WdsAk6VCyv3S9k1LkIx7GSYwLgxD1VsrHo9jenpaWW8SiQRqtZoqViWbe1iW
      henpaXUO2tvZpV4vcU60Wi3V44wKO1c6+hBoItXH7/t+36Z0q4XI+2FNrQCUleUqQOKQyz+d
      P/J3WnRopjSJBSROdlsZHx9XgXeVSkWVRf/000+xefNmlMtl5HI5OI6DQqGAWq2G9evXK5Er
      CIIeZZqVo8kk7XZbZZkxhFm2R5Izvt69RraOXatYUwxAe7ae+M58XcAcOOb7vlIE5+fnexRm
      SWg8rzxPoVDAPffcg48++ggAkM/ncebMGaxbtw4XLlyA67q45557cPDgQcWMdDbxPPV6Xcnx
      bPfKuH3eV71eB7AQ2CbHxqhWz/MQj8eVP4D2/dUs5/fDmmIA3YYf9eJNFg5mPJH4gO5WqfKY
      ZDKJgwcPqhADdrSRjEFfBMurHz58GI1GQ3l/aXmS45ArFfUIJvFzNTAl41jVKoIDB5BIJmHd
      frtighsteeVqYM0xQL/4HG7TnVwyRAFAF+HQ4yoV3DAM8eijjyIMQ6WQ1ut13HnnnQDQFVPU
      arXULE7mkivSYvoCmBi6uXs3Cv/bHyMslQAA7m23Yf2f/Slit966JmT8QVhT6+hVQPUAACAA
      SURBVJ5t210ZYSboIRKSWUzHScKXvx06dAgHDhxQfXal440VJyjC1Gq1rvxj5tkOC+oH1Ffo
      4fXn5rqIHwBaR47g0v/xf8LXrEyrAVfSvmlNrQBAd8sgEmxUDq8u15sgnVVkGBa/uu2221Au
      l7Fv3z58/vOfx9mzZ5HNZnHq1Cns2LEDxWJR9TQ4d+4ctm3bplIRab7UVwISOxmEHl1p0aES
      Hb77bhfxE8133oFfqSAm/AyrAfq7kxNYFNbUCgB0RywCgFe/iPzp55A9/gvEKp8C6F+lQbej
      m8SqTCaDfD6PgwcPolKpYMOGDSqm5/jx4xgfH8epU6fgeR5OnDihShDK8+g1dijfc0WRBXZZ
      yJaiGsvZW6JtlYQVjwOrUOnVGWAYC9fqewoDwAAx27bhhD7SR36M2OwBeHOHkD76JNxmoUuc
      Mc38/cIpLMtCsVjExYsXkc/nVTWHEydOAFjwRtMJNjk5qcIPLl68qM5nWVZXTE+j0VAxQLJS
      M0OUeV7qFADg3X033Jtu6hl/8hvfQCyTWZ4HukLBsPBBes6iGmWvJlSrVQSXjiFz6Add2ys7
      v4nq2J1dD67ZbHaJTiRQdnLUwVAGdnIBOqJKrVZTXlfWC00mk8pJlblMlNKixH5fbA8rvdPS
      78D9KUKpFerMGcz/338C/4MPgHgcqa9/HVP/6l8ieTm4brVjWRtlryYkk0mUEuMILRdWeLnu
      pWUjSE4qcUOWLzdlN5mSvrk/u2aSyFh1gWZT5vvyGMr8Jk8vKzLougq9znRwsTG2vK61fTsm
      /58/R1ipALYNJ5sFXLenepxsNLKWsGYYwFQw1k7mUb3l20icfgUIW2hu/AJaqU2IhQutRulw
      0oPV+GlKGOfvUt+gomoqU0Kvr97tnrU+mXerg9diuuRP/vL/RWt8CpOb78U6dxbr8gm8eTGF
      fOMCtt18O7IxB+H8PIqXzqIRXw8UTiCem0LLG8MDu24eMcBqRmnuPJ5+5teI5bfiy489gCAI
      sffdt7ApG8f7x2/Bt77+KBzXRZthBs0SzvlJTKUcuJ6HcIk90XTnm+49lpDb6amV1+axZBCg
      oyR7yTy+9nvfxrP/31/glWIcn9lgo5K/AzNn9mPfx0eRy6bhxTLYPgG8c+wjZGIVVKbnkNt6
      O+7fdfMV3deNjjXDAKcPvo+JOx/D/VtSOLj3ZfzNM3tw/707cODoQTSyt+Ev/+ow/GoR8Ykc
      SvMFbMpMwNl6Bw6+8EP8F//Ln+GudQuzY1SE6CDmMPkY5IrB70y2CcVKxHRGeorpR2A4s23b
      2LhpAi888zwe/PYfILl3D7Zu3YRiM8R5fzs+e/NWNJsunHQalbMHcPfttyGXCeFWK5j3Jtae
      NeQy1gwDbNh5C1795Uu4eHQKrZkT2LhpA1LJFMZ23AQnux2nzxxFZmwKO++6GZVWgOaxU7h4
      9hNkN+2E77cALF480Gd4hj8wmE2KT3pNHaYlyoQVtiZlwjvFJybLPPy1b6nz3bZ9W/TA7r9r
      0feyWrFmrECy6NNiERUKLR1V3E+GT9ADbAqv4B+T9Fl3kzK9NGfy+vQNsI+vVLBpKSLeePFX
      uBSkMW7P46MzTfzRH/wufvz3P0Z2683wLxxDbNNd+MYTD6n9Y7FY1/GrBYOsQGty5Zs7fxI/
      +8WzmDl/Er946lco+yHOHt2PZ55/BedOHcFTz72MZtvsVtcdYSZIYue++v7SsiSbUuvRpWQI
      eU0yDRmLecASHx48iAvTF3Dbtk343MNPAGEIy/Fw4OBbaAQbcf70Uaz8um1XH2tGBJJI5dej
      deGX+IfnpjGeiKHeCjG+fjOmX3oNL316FH5mCq0gROyyhTMMQ8zNzanUQQkmq1Au13v26jK+
      hK7YAt0eYG7juQkmtsukfD0I7jN37cKxOR9nZgPc/fkpTF84j8mxFPJbn4B/8RDGN+zCIHW+
      X9DgasGaZIC5C6fQcgJ4iGNu9hyOnzyLjH8RbcuCl0riwunTKDXbSHkdYrZtG2NjY6jVapid
      nVVETgdWPp9HEAQoFouYmJjoaZQX1a5VMgRr8TMiNKHF6cj9o/oCSLHoia9/C0+I4zNbt2Pz
      1u2Xvz3c80xMfo7VTPjEmtQBwqCNerOFRMxDo+nD81wAIfxWgJjnoOm3EY95XbOzXiYRWGiG
      QcJst9uYnZ3FxMTEwLo5eugy5XjP85SlhyDzUPnltWRbVcdxVDbZCAsYpAMoBmBjtRE6oCIq
      m+3JGpmAOXGG+5mU437HRokbVH75GwPedB3DsqxRgosB7XYb+XweQEdcrdVq3R71sJ82N8II
      qxxr0go0wgjEiAFGWNMYMcAIaxpdDNAozeCjQycHHBLi2Ed78f3vfx+HT19a0sVfevJ7ODXf
      +b906Sz+4e//Ds/v3oef//AHuFTrrZy8nAj8Kp558kd4+qU3Ua8UUax058gWZmbgj9Sj1Yew
      hXfffR98tc53v/vd7/K393f/Bs++cQD337kFb314HF7tPA5/ehEvPvsUDp0u4M7bbkLt0gn8
      4Jdv4p/+3tcBeDj09ov49WvvIZu0cGK6jvnTB1EOLDz/1JM4erGOeO0cnnruJQSxFN797XP4
      4JNp7Nwyiaef/DFef/Md3Pv4P8JE3McP/vqv8cBXvoXJtIdD+17H+/sPIYyPo37+EH769ItY
      t2kzfvvcL/H+4ZOYPX0Ez7/0KrLrtuCtF5/GOx+fwobxOH7y458gsW47pnIp7H3tZeQ2bMYb
      r72G04f34a3DF3DnbTuV82f+9H78/PVj+OKjD+D1n38fT+0+gM3jcfz0yaeRyufw13/+Zzhe
      szEezOEnT/0a6cnNmBpL9zzPEW4szJx4H3/5g6dx38NfwFuvv7bgCAv8Gna/fRBZz8HR2RAn
      P9qLj1s+HntoFw4eOYmxSgywgFp5HlObdmLd+s1oF47jBwcK+C8f24xXPr6AYGYPWk4CO7MH
      8PbHZ1B7/U20vvo7yO24F97Mfryw9wCcxm7UCp8is+0BfOaWTy9fvIVyEMct2zfDCdt41Yrh
      G9/+T/DkD3+NbzxyE84d34/f7tmE08fO4r//H/9b/N2//XOcLzXw8Tuv4Dev70MqrCOdTiB0
      4nAuO/g3j7v4yX/8AfI77kOschbZ/AYEIWBf5oCx7ffiP/1KFT/94ZN49DNb8fD6B+AF8yhM
      n8Rzr36IrZu24Otfexzf++P/Gc7YJvzoyWfwv/5P/+Jav68Rlhmvvvwa7rhpAi+9/iE2N84t
      iEDnj70PZ2In7vvMLrz1xl586Qt3IH/TA5hKe2gGFqbGUvDbwMSW2xFcfB9/9qf/F3617yIm
      mmfww+fewj277sJ9N6/Dbfc/htvvuhtT+Qwe+93vYMeYh/HxPLbcdAe2rMvjnke+ga898RD2
      v/IUPjh2AZYFwE3g4V2b8K//5E/wF9/7EeAlkB3LI5tw8MF7+5CdnIJfqyCd7XRItK0WxibW
      Y92mbdixYQK33Pc4HvvsLSjOnMGHh44DALbc/TDa1Sq+/sR9iDvAe+/sxbED7+Gt/ScAAH7h
      Uzzzwh4kMmNYv3E9dr/4LHa/9Tbs5BhCv4mNm7P46ZO/xr33PYBUZhz/9Pe+eT3e1wjLiGbp
      PE7O27jrnvtx6sM38dCXvzrYD1A8fwT/4Qe/hJOexB/+4T9H6roHT7TxzI++j49PXcSj3/wO
      Ht61ffAhI4wQgZEjbIQ1DTWfs8bkCCOsJsgQEVlQjFAMUCqVVA16GY8iIw8dx0E6nR464Mr3
      fVSrVRWrYoqKJKLybfVjTDE0LC+yGJhyck0pivzUw5uZkSWL2bLLSqVS6Ql201MdmeHFBnys
      7GwaJ9DpBcauLzKbzLIsVXadYF8BAMhkMqpIVNQ1CDbZGxaslC2TfORzG/SeTbkPQKeYADtb
      LhWVSkUxQLPZRKFQQDweV+dXDMCXKr/raXuEHhMfhVgs1lPzUt6snkGlJ4GYypHoMfQMITbF
      0ZuSUEzn0Qk8qgKDPE6WKpTh0Uxb1KvFEXrDDRa2YmWIqHv1fb+L8eT99WQ5XX5nruuqF91q
      tYwrvF7UC4DKTOsHveWqPsnp9w30hnFHvXv2TFgO6J04ZQRtIpEYnA+gEwSLr/JFyGZupmNT
      qRTq9XqXiKXP4qYHxjBjnUmiVgO5UujHyPvQr2VKPmFVMVZkkDV0TFGd8n9GkMp7ldeXkwp/
      k+2QTM+SodCmnAJTR3bXdVXLJF6H95BMJlUxXn1C4H5kzEFlUpiUL8dlmkSiVgTTBMi2TlcT
      YRiqnmoDr6SLBVzCK5UKKpVKT4ElCXJfKpVSs7ROpINgImD5QBnCzYcmq6ZJIh+mcjAZNpvN
      IpvNqhcse3kNshnImZYEql9Drh66+MBr6Mwtf5PnzmazxmvId8ZEfMdxkEgkkMvl1CqlTwjt
      dhvValX1IYuCTMOUOc7y/uR4TJDviWJkKpUaWsSWz8OEKJ2W5282m9ErgE5sPJBEzYdOuZIl
      /yhvVioVNJtNZLNZ1V9W1zF00UNu01uNSpm6n4hjWk1MD1TXLdLptHqhfIHUeWzbVoyuM2KU
      mCifoT4OVn9mHzLua2q9KpnEcRykUimVbM8exv3AvgZ8hnLmt21bNdJmkw0+Z1PjPB2yJKPp
      ngeJkrxntoJKpVI9uc2D7o19mymWy5yWcrmMVqvVlegl6zJls9n+IlAmk1H9YvWZV589uK3R
      aKjlhQohv/eDiRHk+bnMy9kT6O58Pix0ed+yLKWwk8gIKYPr2yzLUtXfTPeoz+6JRKJLIdNb
      rpogC+SGYahm8mHbGulijmx+Tf0jk8koYgGgkoAGIRaL9XSzXCzYs0HmUw+DMAxRLpe7Jisa
      H+QEpa8C6XS6SxrpywC0UDAVr16vdy1vnuep0n1Ahzj5QPpZAgid4KNulJ9SpJDLrr4ER83K
      JgsE/+dsxpdP0Yezp3yQ8p5arRY8z1ONLvqJd/V6HfV6PVKPMB1HJmu1WkgmkyiXy0gkEn2t
      JByrbdtotVpdXe1lfzRasLiasPL0sJY+tn+SNKEfF2X5y2Qy6h1dSUlGTgCcfEibg0RUjpvo
      YgA5y7PxGruYAJ3lRXYojMViXRYhx3GQy+VQKpVU2p5pptLFKvmp/2/6bto2rE6h76uLebQm
      kSmo5MnjTMzDwrdSrNFlce5vEhOixq6vPJZlqYrRkogIGil0prIsS4k1bK4dhgstnBKJRFdv
      smFgWR0jiNQDTVKCfm9cNRe7cktw5WLR4Cgjgek4iS4GoGwKoKuSMcEH2Gg0FPfpkDMWzwlA
      FXiVK0Sk7AwL5+YDXCoHSMYs7Jiw4dq9nC3FC3mztCBFMVLUg6eIwCWSxCcnBRMB08YuFXLO
      fJwA+N11XbX8Oo6DRqNhLNyrj0sWzqXIVigUkMlkut4D+wSbGJwWI7kStNttzM/PI5fLKZ/B
      sOA99GNm04rYz3K4GMieyMOiLwOwBy4bSOigo2RQDysp6xK2bauZSYoyJpwtBDg6fVnkqADl
      eoD7t3kAepVe0/9Rq4Fp5TH9H4Zhj8Kud2DUH7peUID7yqoR3C8IAsTjceUkTCaTCILAWB6d
      95JKpZQSK8XASqXS1QiCpdL5P++nXC6rJn/682m326jVashkMldEmFIXiBLviMWsMIOQSCSU
      XhRl8TFZyCQUA3CgjUajS+zRYVmdVj9Rv3Mf000O0/zNsixcLHXfTKkeotEC4prGYuJ8aVYz
      jaHfyqOPw1SVmZ/D6DjyXPL6FD04U7NsOi1D8jgSpW3bqFar6lxS+S4UCsp5RNFAv+d4PK68
      yKbxcTZdrA2euoMJcuWR20x9Fa4UFNv0iYbKte4I09HlCeaLHbbbXqvVUks/5VETQVA5NplB
      TTNGwrMwX1u4GccG3IjnpZ/D9ND1e+wXkmE6hzQVmixI8sFHnZs6k+u6PRYjnYA4gSSTya44
      Fnao931f+Vb4XTdLU9Ti+WhirFQqahJIJpNqLGHYcYItJhSC53Zdt8sapFvqJDzPWzbiBzoi
      TTabVZMKu/ZQXDcxp9SPulYAvlB2KR/GE0hFRLYDIqrVqiIamvyGmT1vmnJRrvuoNkPYNnDr
      BheO1TtzSVu6fs5+ItCgWVtXdmkR0pdZ7sO4Ht6jvA5nVdu2kU6nu+JxTAoyP/UVjEYJzmw0
      hcpOM9zPZMbkLCknuUajgXQ6rby//Vb1fmAHGxKb7umWYCn35YJ838PEDwVBoGKYuhhAX0Zo
      HhsGJmWYcrS0dZsGY3L+JDzgoZtiqDZDxF0Ljt0rF0uGNa0oUYqRJNAohtCZiM2rLctSRCyb
      3dHR0mw2UalU1HFSGWVIhVxFeA86QXiep+zVOvhOGo0GKpUKkskkksmkuhcaIEyyL2dGdpbk
      Cp7NZtX9XQloDaKFUIfUY5Zz9r8SSO95rVbrZoCxsTFYVqfy2GI8cibQVBdlkdERNIp48unX
      8PhntmHOXY98ysbEWAqFoo93d+/BE1/5EhrVEuxEDtlUvCvkQRdLoq5nkuElJGNEKU+tVgtj
      Y2NqdUun06pArmkFkKuAbi6MMjTo0Z0mhGHYpYvV63V1PjKh9Gmk02nlr+B1aOatVqvIZDJX
      1GhajpsxUPqE1M/PcT1AJkwmk70rAHBljgkJWjSAaFOljlOH9uHSzAUc/MRB1ZrBa089j/u+
      fCeOnfORuHAA8amtKJ7Yg1Pljfgf/ptv9bU26DO4yR/RTxk2iSX6/5SVm82maoxtMvnpSvQg
      Bh02FkYXVxidKVdHGYnLGpl8t7FYrCta90oUYAmKZtQxbgRYlnX16gJJ0SRK4ZQEcWauiS8+
      ei9mLhVQmZvBpp1bsGHzTmRjLm697/OwGzOYLrawYZ1ZSZOMJr/rZtd+zKgTrpwRGatCLylN
      h/QU8x5N4lS/bXKc9KxfCWie1hv6SZgC3KhbSAfelYJMBZgrWK/EJnxXrTo0lQ2g1/vJbRKL
      efGyqzq1f8rBplmY15NE12+2M4lCDLhiGXNataJm+0HjZxVoea1cLrfkAre+76NUKkX+zlDv
      xUZdDosgCFAul5XoJyNj8/n8VQ911nHN+wTT4sP/+dnP5GjbNhC08JsXXsG29Wkcu9jGP/rq
      o/hgz8uYbibx1Ufuxsuv7UMKRdRSm/E7n78XwMIsQ0Jkk2ggWtySJc37EYA+c7daLUWwJkVa
      Z2idEeXKk06nu0qgc4Vaqt4FLEwk8npyHJIo2bib+w+aGIYBlUygI5axLP1SQx+uFpadHX3f
      VzfNB8FlWRdRJHEc3f8e3j98CvuOnEGjcAzVZoBdd+/CocOHsG/vbpw4cQ6fHDuFD19/Ay27
      o8zRUkKxRA9Zln9ElKgi5Wa5jd/r9TpOnDihxAhdlJJhEjLgzSRWcPbn8dJUulTQ2mO6F51Z
      pdmaFqzlAJ+v67pIJpNIpVLLFv6w3Fj2FUDKgQAwMTEBoGOZkJ5IvniGVwRhiOLMOXhTMUxX
      HRQuXcC5Y/thIUQbFs6fOYsvPn4Hgmkf2YSH5OWXl0wm0Wq10Gw2USwWUavV4HmesoSQCeVM
      OKw/QOLUqVPYtWsXCoUCLl68qGzo5XIZ69atw6VLl1T22/T0NHbu3In5+Xls3ry5J3WQLZWu
      BqjU6mZteX1uk3oRHZp0JC0Xhk2fvV64Zh1iyuWyshPryzMdNHJmvjh9AZPrNqhKbhKmWKMw
      7ATaTU9PIwgClUQehmHfhHl9ZYpilCNHjuD2229HuVzGpUuXMD09jcnJSWzbtg2nT5+Gbdso
      FAqYmJhAu91GIpHA/Pw8pqamkM/nu8QL/Ro0WeZyOfX7laJaraqV0GSB4mozNjbWlWNRLBZV
      YsqVxgStRAzdIeZqM4DMHeVA6LomA9CScSVJLkS9XkelUlEvt1QqqbiZKNu/KVyb23lMoVBA
      qVTC+Pg45ufn0W63MTExgVwuh9nZWVSrVWVNYR5Fq9XC+Pg4stmsaoHE85uUdZoSr9QjC3Qm
      Gpmp1S/sgxOJDJ8GOhallT5zD4sVwwASfNhzc3OKCOLxuIotX+oMRD2ECSHlclnFi0j08yXw
      u3Sw6dt5jqjf+Dsb7JH5TY44bnNdF7lc7orvPww7EaJ64o2+opmUZH56nrdqVoEV2SeYdnQA
      KkbGtu2uFLelgF5JElQ8HlcEoYtaUjGU5lqTEtsvOpSQ4hxRq9WUCZXbE4mEMbya4dJXCjrT
      9HHoek8UY19tHWWl4bowQBAEyladTqdVMBWZYangigKgiwGiHD2SOPTZUX6PEs10IpKgV9yy
      rC6buF6VQaJer6NYLKp87MU6qEwm1UHn0EXBqNDp1YZrXuqWsSeU+ZnMwWVquRwlsVhMKd1k
      rHK53JXsYyI+3cYftQ9/169p23aX+EFiBxaIyvM81Gq1SJGMEaO+76PRaKgkpUEiiYzhiiqV
      IscdJQLShLkWcM1WADpgaG3IZDJdmUzLZQcnyGAkymw2i3Q6rWJVpK+A++szuV6/RxKRqQIa
      vaxyDBT3pKLp+75K5DDpEvqYqtXqwBgb1v7h8XoSfxTzmO4NQN96T6sJV53N+TJol6eF4Voo
      WJx9GfpL0YDEHaULEP3ih6SFiAwVFf5tsv4A3TVqiKhVh6EXtBLpzMc4IDIMGUxCHy8/ZVYV
      j2m32ygUCqrH7mpQiE24qgxAk2C73UYqleqa8a8VyHTVarVrBdBXG73rO9Br7dHDKHTm0QtP
      mcbCzzAMjUkrEibdolaroVqtKmamN5xMLQvj9nsm8pPFtvR9wjDE/Pw8EonEivXkLhVXVQTi
      MkpR5Ho9QNvuVECLxWLI5XJdhXSBbnOnTGaXGVRRPgTJJIOIXzdLDpMcwjGZvLqtVqvLYsQK
      3/1Cm03iUDweV6El+m9BEKBarSrRdbVh2RlAFsfKZDJDldi72mC1OiqgAHqIURIMZ3ug10Ik
      jzVZiXSzKqF/pxOqnwUJQM849LHLbfSOs/5nv3HI7fV6XaVb6gn1krkHlW+50RCG4fKJQGG4
      UPPnWoe8DgK9ziR0x3F6CljphK5vM8nm+gogEbWNZl6GVfM8JuhiFusLyefL3GHeF89tqkCn
      j42MzjpPpirYcgUsl8tDW6RuBIRhuLwrAEuKLzWmfblBBZGVFZg8rYsuktiiKhzrliN5Dqlc
      yoJNch9aipjBZdI7JOR5pO4inVY0qfJcDIfQx8GxSMbjmGl61VcwXaxbTQ4yy7qCjLCoVkqU
      aVfizMCZlwTL+vkUh0g4VGJ5jFwJoiqQmVaFqNmf3m5GrwJQFZ5NDEai1hlNMicD7wB0eZpN
      litpruU5pR6iW4IIyTCrTQ8YmgFkyYvrndl/JZByPl+8SWmVxKHPvvJcpnNLhomaCOQqQdnb
      dB6TT0KX57kffQyyOtugcQyCrizzXKslSA647PAbdmeT8ngjg2ZIWVdIJzy5Csjj5KfpvBJ6
      KUOgY61hNemxsTEl20eJKkCvXiXHQUdbvxZIUX4P/q/L/PJZsJwK86BXk0l0ZWmr1xDs5EIR
      xDTzRokyg5RW3WJkssJIZVy/Ho+RJlnTtfT7MZ1Ht1wNM27JBMy4oyFBD+K70bE2Aj4M4KxG
      8yhjh3QLCdBdbZqf/Wz+OnSLEtAxzTKBXF5fplZa1kJocqFQAGBeeYYVdXSxKAxD1UiPoePc
      JhmA8U2MVF2KaLXSsGYZAFgo010sFlUDCtb4kYQm83eJKJOoCVJc4XF6zUrf95FMJlXIiBSb
      ZIyPLq6YxqJfVx+3LNXOUoX0kdRqNVV7VCbY06wqy9snk8kbUh+UWNMMAHQiOPP5PEqlEur1
      OkqlUo9TbBh7f5RMLaFvlzOyZVnKnCljfUisuVxORdLK88kxDLqePCYWi6k4KTI4Vxt9dWPh
      LD4HMsFiezOvRKx5BgCgukDOzc11eVDlJ9BNsKZUQ115lMwRtWLoptYgCFAoFFRZw1QqpXoA
      sJwKS7To19W/R5loyeCyiTk7SOqmUUnw+j01m80bnglGDHAZ7LulizEmxTgq1iZKJOm3cgC9
      ivH4+LiqRAd0dBB2hKFoQuI1YdA4LMvC3NycclwC6Fuzn2mEVLSbzabq+rmUanYrAatHnV8i
      ZBYVCVL+cTvQLRYRUTqAfo4oyJWAjeps21Yzvuu6yOfzqjWoPL8Ok7NKjqFYLMJ13a6ONGEY
      9sT6UO5PpVJIJBLIZDKIx+NIJpNIJBLL2ujieqDVao1WAIJKIRXOqApyuj7QTz/QGcZ0TRNY
      bZqWGa4MMoQjCALVNonHSLFMHyNBvwerVkg0Gg2VgWZZlhK9JJHLvhHXI7x9qeD7IvOOGEBA
      j9+JIm5JZARFGNM2HjMI+rVJ0GxeIRVXz/NQrVYxMTGhrDOyBxtBBqLDbH5+HpOTkwA6inCl
      UlHZeSzdwkkgqlecfA43GvjuVODgdR7PioJu/dAVWklcUc099O/9bOa6sqzP2PzOdklUSGu1
      GhzHUX0KksmkmqmlSMPSMBKTk5NqG5tTZ7NZlUXGatFMJb0RiXwxGDHAZZhm+0HmT905xu2m
      cy+GkKQTjudn2qLMa7AsS83qnNmo2BaLRTWDm7zblOUZBs0mGtIEuxYwYoDLoMghIUWdKOtQ
      lGfYZAI1nSNqLJJwuWTrUaCctSnPsgRLq9VSnmUT9IIEnO1XagXnq4mRFegyTOHOugVHJ+Qo
      u7/8ZDNsenSlXqBfj79HrSZS5GIfgHa7rYpuydqrMi9Y+gSoxMpzs/fBWiN+YLQCKAwbDEeY
      HGX8X64GYRji/PnzWL9+PWZnZwFAWW/Y14vx/GfOnMEdd9xhLPzLFUo6uSjy0HzJJtm8PrPF
      dIfbCAsYrQCXQQ+pnPVNWV2S8GVSjSRKPTeAxzSbTSWfAx2mm56eRqFQQLFYxNTUVJcoJsdS
      KpVU5xVCxvHIihTcR/YJBtDVJG+EDkYrwGXoOoAu45tEE72UCM8jdQIyw7lz57BlyxY1UyeT
      SVV3Jx6Pw3EcZXfXrUtMSJfXl7N8P8WbNn+Ge6xFMacfrkt16JWIMAxV2wn6JQAACdJJREFU
      VKiuwEatAhJRzqdhrEK6GGUyxZrMryadhb+1jx1D5Yc/grNhAyb+63+B1OTkmiT+a94j7EaF
      ZVlKhgYAO2zBK52E7ZfRSm2Cn1zXtW/UOfT/wzDE4cOH4bouJicnVUUFFg1jrrJJkTb5IEzX
      6PleKmH2X/4rBDMzAIBg9hI2//Efr8gujdcbIwYQiMVineYSzRLSR38Kp3oeFoDQstHY+AXU
      Nj2G4PKk2y/cQBImwxhk+fdisagiKT/55BMkEgmEYYhsNovt27cbK0L3c5bp4wjOn0cwN6eO
      9Q8cXHXJ7MuFkRIswJDg5NnX4V4mfgCwwgDx82/CrZ5T+5pEFflJ+L6vUh8Z6uz7PhKJhFpt
      kskk8vk8Zmdne/SQxcKyLDg7dyJ27728KaS+/e0bOmLzamL0VAxwSqd6tllhALd8Bs3kJgDm
      yFATwbquiy1btqj+W4y3YT3OzZs3K7l9ampKnXNYGK/reZj40z9BY88e2JNTyH7uQRXt2XVP
      1nDlGVczRgygwbIshG4SaMz1/Ba6SaMszuMAs2IqZW8mujDE2aRQmxRoXcSiMnzozd9i/4US
      br/nAdx/+3agOoO9p2p46M5tSH71qwCAZquFpqFiBBtmr2WMGECD53lobHgQzifnYGGB6ILY
      GPyxW/sSP9DbN2CQZSgqzoj766IVA9ZoXj1/8gwe/f3vYPc//C1+/O/2Ir/lFmy56yHs/cm/
      wQXswH13bUC5GcOtW2L4xcuHsDlbRFBr44MLIf7Dv/nfl/y8bnSMGECDbdtwtz2EOkLEzu2B
      1Syjnd2K2tYvo+0kAIPnV1d6dS+xyezZzzyqV6OQoMiitocNPP/0LzE+vgU77mxh1y1bcfTs
      CcwESdx26yQ+nQuRsis48tEhjGfGkNiQx0bLwpZ7t8Bde1bRHqx5P0C9VsXs7CySmRxirgOE
      bdTqHQdX0w+QTiW6CLnl+3BcD7a9YJePakVK55pOtPrKIPcnTL+ZQjWWIsOvBRFo5AcYgPd+
      +yyOVx1MjK9Hpn0JjWYTbx08AevSDCbu+wJyNrB5fRal8jwKpQATU1lMZNI4fm4e3/jyowND
      nfXam2SKfpGgUgTq51CT+PTIhzh0roKJeBPHLtTw+7/7NZw9+iEuNOKwi2dwtmhh+/o4as4E
      Hv7sXRhN/h2seTPouel5fO6RR7A+Z+PkyVN4Y/du1OYvoOVsRuXSWYwl5vE3P34dpeoF1EtV
      vPn+QRw+/An2vPkq2sFgwtQjSoHobpMAjCvJMMiu24qwcAo77rgH2VQGrm1j7zuHcfTAXtxz
      7z1I57LYcdMdOHvkEFZPfeelY82vAL/z9S/jNy++gFvuuQ/58fX43JYdsC0LDnLYvD2Dd/Yd
      xT/7J19CfspFqxHH9loFTr0IK/0YLAuoVqpdVZkZ4QlAeX2HjTDt51SL8jMQx/btRtFdh5lj
      h3DT3XejVJyHazVQars4ceBD3Hz343jj+R9jYscDo1lPYM3rAJVKxVhUdhgwxp/Hh2Gn4K7r
      umi326hUKshmswOtPvJ88n9TTJB+DopYhUvTKDfamBjPIxZP4PTJE9iwfhL1wEHKteEm4rh0
      /jzadhwbN0zCwkgHAEYMoBhg/sIx/OJXe3DnZ+7AWy+/gN/5zh9havYtPPlRE4/dksZLbx/F
      7duncPJ8Bb//nf8MG3OJrlRFQo8gZdI5PcFMRjHN8npVB2Zpkcgty+qqGMFzZDKZK/L0Xqm4
      dSNhpAQPiYuffoILxTlsczK4dddnsWvLGGbbNyFX/w32vJ3AXXduRbEGWOWTODtbxcbcQly9
      KZBN/rEpRiwWQ7PZRCaT6fEgM5eX55BdX2QMv+wrViwWVd2gldaV50bBiAEuY+vt92HnkYvY
      mo+hFL8LlTOf4NNiHV5mHb70xF14+50jePDenXi/HeLOzWMAOoQej8d7SgfK2Z3lDJkbwBVH
      9vNil0Y5G0dFbspZO5lMolQqodForIhmhCsJekJTFNa8CMQy5T3bq1U4ySRcA1HJTu9jY2Oo
      1+tdDeborQV6wxmCIECpVEIul4Nt26pt65WOnVli2Wx2FO4swNW1UChgYmICwEgEMiKq5U+/
      oq+xWEyJNdVqVeX4Mvld1uKR4hEdV8lksqcE+ZWA2WPMLRgxwAL4vAc9k5FF7ArAolTZbFat
      ILJ1qBRTTEtwPB5Hs9nE7OzskrousgH4WihgdbUwYoAlgNXY2GI0lUr1hCZEEWY2m1X9wZaC
      WCyGeDyuZjpTMs0I0RgxwBIRj8eVThCPx5HJZHoabERhOZLULavTApYMICs+r3XQTN0PIwZY
      AmgFymQyKt3RdV3l/OrnvR0UQzQM9BALYKFUygid1ZCrcxTWvBK8VFhWp6w6bftAR0fIZDIo
      lUp9j7vSSM4wDFGr1ZQHml3nk8nkKPVRYBDxA9eBAWSs+2qCTnjsnMKqbdI/wO/MDY4C95ce
      YlaUYBVndmppNpsoFovKcbZWSx0Svu+jXq8PFAevOQPoJkLOXqsRsq2Q9PqSMCVzmNBoNFCv
      19WkkclkEIvF4LpuVyvTRCKhKkuUy2VUq1XlHLsRm1gsByqVChqNxsrWAegdXa2Km968Wl/1
      giBApVKJPF52cHRdt8embUrNzGaziMfjqpwiy6mzMbjeBmm1Ip/PI5fLDfQDXPeplyW9V6MT
      J5lMqrKGhE60zWYTvu/33D+jTBn0JkOuB0H6JIDO6lOtVjEzM4N8Pq+aYzuOs6pXh2GC/a47
      A1BhXI1wXRe5XE6JJIC57WqpVILneYjFYmqWZhxLq9VCuVweOmy51WqpCYUiWLPZVAo3E+pr
      tRrS6bRy5CUSCdi2HZneeSNiGNH6ujPAanjQ/WBZnS6LDH+Qnehl6DMVWT6P+fl51VtgfHx8
      6KrOzEcgwTP0AgC2bdumqtQRjC4dlHBzo2LFKcFrESR0NrljN8Z+5QpJwGyONyxh8jryO2ES
      M3W9ZDUxwNzcXFejEBNGDHANQUZgn13K/zRdtlotVCoVpRjT0lOr1VS8D5nGFHYxwgKG1ZtG
      DHCdQC+yjEZlry7K/JZlKf2AM1kQBJifnwcAbN26NTKada2jWq2qSNl+GDHACoPruti8eTPq
      9TpKpZIyhbKYbqPRQD6fh23bq9JytlyIx+OoVquRjQKJEQOsQDiOg3Q6jVQqhcnJSfi+j0ql
      gnq9rppcrxZLzdWCZVkoFAojEehGBhM6mC9cLpfhOI5Kil8M2u02isUicrkc2u32qvcQ27aN
      dDo9sOKHYgAqWyOsXLiu2xUaMUywFx1xUrGu1WpwXXfVN8UeHx/vCUhsNBrdjknmBLNsxwgj
      rDZQVzL2SAjXQmDICCNEYHXFJI8wwiLx/wOJbmFfJ2ylhAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Discharge vs. State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Total Payment vs. State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Covered Charges vs. State' width='192'>
      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
      /wN0cdIgtdu9/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Medicare Payments vs. State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO1926sdWXrfr277evY+klpqSX2Vunvc4zbGBqdtEoaESQy5YAjETybkIQGT
      PCR5z1P+gBCSQIL9kpAQ25AHm4yxscE2vgRPmPEt054ZemY0UrdaI7V0+ujc9qX2parycOa3
      zlff/lZVbUndHkn1g8OpXZe1Vq1a33V961vBrVu3in6/j16vBwtFUSDPcyyXS4RhiNVqZd5X
      hyAISmXW3ZvnufsdhmHpmSAIUBSF+88yZR1N2mK1wyrbhyiKEIYh9vf3sbu7iziOsV6vN56r
      K4v1Vd0XBAGyLEMYhpXvU1eG7FfZX1YZPO73+4iiyNv2LMtK5fjurcNqtcJisah8h/V6jSiK
      Sv3V6/UQx3GpDDkeqsqLkyRBt9vFzs5O6WbZ0dPp1B3Ll7MGHDtOXvcNTD2oec5qsDwnB6ms
      k53yONCExAFjDbwoihDHMfb399Hr9dDpdDY+oH4vqz79jta7FEWBxWKBbrdbul+3W/+3rsu6
      LILXDGI8HiOOYyyXS+R5jk6ngyzLkOc54jjG8fFx6T36/T6SJNnqW2RZhtlsVupntouEzzYu
      FgvEcYw4jlEUBaIoQpIk6PV6mM/nJsO0mEcQBIiB0498fHzsTvLF2ID1er3RKNlBeiCyAXme
      u2OfBJD3aKqtgq8NTwJ6YOiyLeKT7ZJSied87bPO6w+Y57m7L8syrFYrdw8ltx7Iug38+BbX
      178181kul4iiCMvlEsvlEvP53NVFztvpdACccuDpdIput4vBYGC+s0ZRFFitViXtgu8smTHb
      1el0sF6vsVqtkCQJ8jzHfD53Y1W+F6WFb5zEshH8XxRFSZRXcXB9TVIZqTbLspLkkANLfhh5
      LwlDdoQkribi7VGhB4n1ntbg1m16FImU5/mGCsEykiRBlmVIkgSr1aqkzug26bZJIiKTkyqR
      /g6yvDRNURQFlstl6TwHbhRF6PV6iKLIMb5t1KD1eo35fO5lmJa0IhFQKgZBgPl8DgA4d+4c
      JpMJVqsV4jhGGIZOYmlsynVPZ8rGyGOfiNcUzMot1UY+JztA6/eSuPI831AXnoQUqFPFtrE1
      eL/8L8/zT/aNfn9ZXxRF7o8DTvZDk/fSbQrDsMRhWR6f4XOLxcJbdpZlOD4+xmKxQBiGiOPY
      20dZljlJwvqCIMDOzo4joKbfkqoPJRLfgZIkCAJ0u110Oh2MRqOS+kiUCIAirapD5WDTjcyy
      zBT//N9EXdHlWxyJxPCkBr0PHAwW95cDRZ6X7+EjIlm+liCWDZVl2QZh8uOSK2tYjMv6k/WR
      GCwJUocwDJ0a5OuTPM+RpimOj49xcnLiiIp6fZ7nGwQomYAcW51OxxFar9fDYrFw44/cHwCO
      j48xm80AnKpOWjKVCEBSr08ftCA7UHIrXtMdqcuW3FDD+hiSc8pndTmPohrpAWgNAEmAVRxe
      fkB5vUqiWX0v79P9KqF15ap+lc+wnDAM0ev13DNRFDk9XrdfotfrYTwebxiZWZZhOp06FUp6
      eaiySGKQfWKpK1rVpP1BZrBerx2zkH2/Wq2cod7v90v9FssKsiwrcRs2oooLaGr1NbrqWJZl
      cXvfNa0vPglbQOrH1iDTH8H3Pj7VUJfhE/lN+lV6R6x2+KSXHiBS0qzXawwGA6Rp6jhqkiQl
      SaPr63Q6G4OfxjC5OlWRIAicw0W/p+4Tqmi+fqUUoDolDXWrvyaTCYbDofPWAYoAdCdpb4QP
      Pv3Wari87uOw+sNYL2PVa90nO7GuXPmcb+BsA0udsa43YTD6/jzPsVqtnBdIqzJWnU36dbVa
      oSgK51KczWYliSL73set8zzHycmJ+802khgk49LEpdvr6zeqPDs7O86FT8eAVi2JbreLNE0R
      x/HZse5kX8f5rvlUBD4nB59lB+iJmaqPZD1r+eeb6Oa+tlt6u1ZzmkgyQjIRqw80x7P615KG
      0+nUqStaKlE91D71Orc0zy2XSze55evLMAwxGAycUS4hJ8Y4J5DnOabTaclAHY1Gzk2ZpumG
      FJB9p78JJeBkMkEcx8jzHL1eD8PhEGEYIk1TLJfL0ntmWYZ+v4/Dw0MMh0MkSeL3AukP4OMm
      Uk3SA0OrAZLr808bXvLZqoEKnPl4rfZabbLa1uT9JSzj16p/G84uy7Wko6VOjUYjNz9j9avV
      N9pG8PVN1ayv/Dbr9dq0wzgmut0uer2ekwh6PokD1NI0rLZZYy3LMiwWC6zXa5ycnGA2myEI
      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
    </thumbnail>
    <thumbnail height='192' name='Total Payment vs. State' width='192'>
      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
      PT9ZehiGBAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
