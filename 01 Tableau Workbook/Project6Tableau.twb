<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' inline='true' name='oracle.42117.727783518516' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[TOP100DIAGNOSES].[PROVIDER_STATE]'>
              </expression>
              <expression op='[STATELIST].[STATEABBREV]'>
              </expression>
            </expression>
          </clause>
          <relation name='TOP100DIAGNOSES' table='[C##CS329E_JDO589].[TOP100DIAGNOSES]' type='table' />
          <relation name='STATELIST' table='[C##CS329E_JDO589].[STATELIST]' type='table' />
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DRG_DEFINITION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG_DEFINITION]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>DRG_DEFINITION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSPITAL_REFERRAL_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HOSPITAL_REFERRAL_REGION]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>HOSPITAL_REFERRAL_REGION</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DISCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_DISCHARGES]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>TOTAL_DISCHARGES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_COVERED_CHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_COVERED_CHARGES]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_COVERED_CHARGES</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_MEDICARE_PAYMENTS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_MEDICARE_PAYMENTS]</local-name>
            <parent-name>[TOP100DIAGNOSES]</parent-name>
            <remote-alias>AVERAGE_MEDICARE_PAYMENTS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATENAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATENAME]</local-name>
            <parent-name>[STATELIST]</parent-name>
            <remote-alias>STATENAME</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>14</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEABBREV</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEABBREV]</local-name>
            <parent-name>[STATELIST]</parent-name>
            <remote-alias>STATEABBREV</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
      </column>
      <column caption='Hospital Referral Region' datatype='string' name='[HOSPITAL_REFERRAL_REGION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='real' name='[PROVIDER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='real' default-format='*00000' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
      </column>
      <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:PROVIDER_STATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATEABBREV:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' inline='true' name='oracle.42117.728924085648' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation name='TOBACCOUSAGE' table='[C##CS329E_JDO589].[TOBACCOUSAGE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_ESTIMATE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_95_CI_LOWER_</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_OR_OLDER_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_OR_OLDER_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_OR_OLDER_95_CI_UPPER_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_ESTIMATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_95_CI_LOWER_</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X12_17_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X12_17_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X12_17_95_CI_UPPER_</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_ESTIMATE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_95_CI_LOWER_</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X18_25_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X18_25_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X18_25_95_CI_UPPER_</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_ESTIMATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_ESTIMATE]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_ESTIMATE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_95_CI_LOWER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_95_CI_LOWER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_95_CI_LOWER_</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X26_OR_OLDER_95_CI_UPPER_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[X26_OR_OLDER_95_CI_UPPER_]</local-name>
            <parent-name>[TOBACCOUSAGE]</parent-name>
            <remote-alias>X26_OR_OLDER_95_CI_UPPER_</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>6</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 17 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X12_17_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X12 Or Older Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X12_OR_OLDER_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X18 25 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older 95 Ci Lower' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_95_CI_LOWER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older 95 Ci Upper' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_95_CI_UPPER_]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='X26 Or Older Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X26_OR_OLDER_ESTIMATE]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[X12_17_ESTIMATE]' derivation='Min' name='[min:X12_17_ESTIMATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[X12_17_ESTIMATE]' derivation='None' name='[none:X12_17_ESTIMATE:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[min:X12_17_ESTIMATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;0.1075&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;0.1307&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1112&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1365&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.104&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1153&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1485&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.0976&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.1239&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.0881&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.1212&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.0868&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1203&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1685&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.0693&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1156&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1491&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1078&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1093&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1313&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.11&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1134&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1407&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1009&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1268&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.0906&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.1231&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.0873&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.1205&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1007&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1252&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.0753&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1157&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1512&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1066&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1272&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.0942&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.1235&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.0959&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.1238&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.086&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1137&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1421&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.0764&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1161&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1649&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.103&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1138&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1438&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:X12_17_ESTIMATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;0.1075&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;0.1307&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1112&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;0.1365&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.104&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1153&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;0.1485&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.0976&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;0.1239&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.0881&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;0.1212&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.0868&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1203&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;0.1685&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.0693&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1156&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;0.1491&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1078&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1093&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;0.1313&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.11&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1134&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;0.1407&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1009&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;0.1268&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.0906&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;0.1231&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.0873&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;0.1205&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1007&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;0.1252&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.0753&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1157&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;0.1512&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1066&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;0.1272&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.0942&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0.1235&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.0959&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;0.1238&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.086&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1137&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;0.1421&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.0764&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1161&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;0.1649&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.103&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1138&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;0.1438&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42117.727783518516'>
      <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42117.728924085648'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42117.728924085648' target='oracle.42117.727783518516'>
      <column-mapping>
        <map key='[oracle.42117.728924085648].[none:STATE:nk]' value='[oracle.42117.727783518516].[none:STATENAME:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Covered Charges vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_COVERED_CHARGES]' derivation='Avg' name='[avg:AVERAGE_COVERED_CHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:STATENAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:STATENAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.42117.727783518516].[Longitude (generated)]' field-type='quantitative' max='-6045602.5575647093' min='-19063009.369585562' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.42117.727783518516].[Latitude (generated)]' field-type='quantitative' max='10435492.288677137' min='1276816.7816481786' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:STATEABBREV:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Discharge vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[TOTAL_DISCHARGES]' derivation='Avg' name='[avg:TOTAL_DISCHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:STATENAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:STATENAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:STATEABBREV:nk]' />
              <size column='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' />
              <text column='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Medicare Payments vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_MEDICARE_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:STATENAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:STATENAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:STATEABBREV:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Avg Total Payment vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column caption='Statename' datatype='string' name='[STATENAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATENAME]' derivation='None' name='[none:STATENAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:STATENAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:STATENAME:nk]' member='&quot;Delaware&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:STATENAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:STATEABBREV:nk]' />
              <size column='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' />
              <text column='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Payments vs. States'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
            </column>
            <column caption='Total Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AVERAGE_COVERED_CHARGES]' derivation='Avg' name='[avg:AVERAGE_COVERED_CHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AVERAGE_MEDICARE_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOTAL_DISCHARGES]' derivation='Sum' name='[sum:TOTAL_DISCHARGES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;HI&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42117.727783518516].[none:STATEABBREV:nk]' value='73' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' y-axis-name='[oracle.42117.727783518516].[sum:TOTAL_DISCHARGES:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk] + ([oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk] + ([oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk] + [oracle.42117.727783518516].[sum:TOTAL_DISCHARGES:qk])))</rows>
        <cols>([oracle.42117.728924085648].[none:STATE:nk] / [oracle.42117.727783518516].[none:STATEABBREV:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Tobacco User (18-25)'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column aggregation='CountD' caption='X18 25 Estimate' datatype='string' default-role='measure' default-type='quantitative' name='[X18_25_ESTIMATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[X18_25_ESTIMATE]' derivation='None' name='[none:X18_25_ESTIMATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AL&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;GA&quot;' />
              <groupfilter from='&quot;IA&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <size column='[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]' />
              <text column='[oracle.42117.728924085648].[none:STATE:nk]' />
              <lod column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42117.727783518516].[Latitude (generated)]</rows>
        <cols>[oracle.42117.727783518516].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Payment vs. State'>
      <table>
        <view>
          <datasources>
            <datasource caption='TOBACCOUSAGE (C##CS329E_JDO589)' name='oracle.42117.728924085648' />
            <datasource caption='TOP100DIAGNOSES (C##CS329E_JDO589)' name='oracle.42117.727783518516' />
          </datasources>
          <datasource-dependencies datasource='oracle.42117.727783518516'>
            <column caption='Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Stateabbrev' datatype='string' name='[STATEABBREV]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Avg' name='[avg:AVERAGE_TOTAL_PAYMENTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATEABBREV]' derivation='None' name='[none:STATEABBREV:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42117.728924085648'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]'>
            <groupfilter from='&quot;AK&quot;' function='range' level='[none:PROVIDER_STATE:nk]' to='&quot;WY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42117.728924085648].[none:STATE:nk] / [oracle.42117.727783518516].[none:STATEABBREV:nk])</rows>
        <cols>[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Comparing AK,CA,DE'>
      <style>
      </style>
      <size maxheight='627' maxwidth='1169' minheight='627' minwidth='1169' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='13' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='99658' x='0' y='0'>
                <zone h='47049' id='1' name='Avg Discharge vs. State' show-title='true' w='49830' x='0' y='0'>
                </zone>
                <zone h='47049' id='7' name='Avg Total Payment vs. State' show-title='true' w='49828' x='49830' y='0'>
                </zone>
                <zone h='52951' id='9' name='Avg Covered Charges vs. State' show-title='true' w='49830' x='0' y='47049'>
                </zone>
                <zone h='52951' id='11' name='Avg Medicare Payments vs. State' show-title='true' w='49828' x='49830' y='47049'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Payments vs. States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:DRG_DEFINITION:nk]</field>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728355231484].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.728355231484].[none:STATENAME:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_OR_OLDER_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tobacco User (18-25)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:STATE:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Comparing AK,CA,DE'>
      <active id='7' />
      <zones>
        <zone name='Avg Discharge vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Total Payment vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Covered Charges vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Avg Medicare Payments vs. State'>
          <viewpoint>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='1' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Discharge vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:TOTAL_DISCHARGES:qk]' type='size' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:STATEABBREV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Total Payment vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_TOTAL_PAYMENTS:qk]' type='size' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:STATEABBREV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Avg Covered Charges vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_COVERED_CHARGES:qk]' type='size' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:STATEABBREV:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Avg Medicare Payments vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:STATEABBREV:nk]' type='color' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[avg:AVERAGE_MEDICARE_PAYMENTS:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:HOSPITAL_REFERRAL_REGION:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATENAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Total Payment vs. State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42117.727783518516].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42117.727783518516].[none:STATEABBREV:nk]</field>
          <field>[oracle.42117.728924085648].[:Measure Names]</field>
          <field>[oracle.42117.728924085648].[none:STATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_17_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X12_OR_OLDER_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X18_25_ESTIMATE:nk]</field>
          <field>[oracle.42117.728924085648].[none:X26_OR_OLDER_ESTIMATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Payments vs. States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tobacco User (18-25)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Comparing AK,CA,DE' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Avg Discharge vs. State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Total Payment vs. State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Covered Charges vs. State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO19W48kyXXel1lZ90tfZnb2SlKkxKVI0eJagOW1DFiGDUiybBjQiyADNkBB
      P8BP/g1+sn+AYBh+EWBBMERLDwItCbJpyaLXEtdejrgccZdLzXI4s9s7091V1XXJyosfer+Y
      k6dOZGbP9kz3TOcHNKorKzMyIvPc48SJ4Pvf/37e6XQQBAHyPEcQBGi322i32wiCAJcVy+US
      WZYhz3PzdzmePM/d/9Y5+n99DoBCG7odXx/09UEQIEkSDAYDBEGAMAyRZRmiKDKvTdMUrVYL
      SZIgTVN0u11kWYb1eo0sy1z77XYbcRyX9qPb7brz4jhGEASuH8vlEmmaFvrc7/cRhqHZVp7n
      WK1Wrg9l95VtymdtXZdlmXlP+azYrzRN3XEJa3xpmiLLMnec/QaAqNPpoNvtuk7Jz06ng06n
      g1arVTnAJ4k8zx3x+x6afrjyBUhC1oyRZVnhuHxg8rw6wsFiruVyWThnNBqh2+2a16Zpis1m
      AwAIwxDj8dgRfxiG7r3lee4IRI5LIgxDDIdDDAYDTKdTtNttjMdjbDabgiDhZ5qm2NnZ8TJB
      HMeYz+elY9cCo0xYZVmGVqtVOEe+iyiK0Ov1kGUZer0e4jhGu90u0Gae5zg6OnJ9brVaSNMU
      YRii3+9jf38fq9UKm83G0U7Eh6ORpimWyyU2mw36/T6iKLo0GiFNU/eAfS9IP3RKU/27b0wW
      sfNlSELT95HMo8/jOexznudYLpdotVpotVqFe/L5x3Hsrjk+PnZt93q9LWbyCQLeezabuWeQ
      JAmm02lB8ktsNhscHR05Iagtgna7jcFggNVqVSBa+Rz0s9HvS15HBp/NZuZzStMUi8UCwClh
      02rRaLVa7rnHcYxWq+W0XxiG6HQ6jukBwNa9AkmSYDabYTQaodPpVJ3+2JHnOU5OTgDUk8JE
      GIYFprFMIrap1WRZW7IN/b2O5kzTFNPptPB88zzHer12xM97sf1+v4/1el3ZtmWqJUnividJ
      UvoMaTaQkEajkRsTmZBSme1sNpuCZpAMaN2LxN7tdh2BZlnmNJ9kHraxWq0cQ/I9xXGMJEnc
      dXKMg8HAmZlZlhWYvsAAsrPyexAEWCwWyLIMnU7HK3UfFyh1KRX5Eus8WMscqLqG19X5vcxv
      kPeSRCzvz8/5fO7UfBiGTs1L4qJZSvvbGptlytax0a2+y/ecpimOj49Bk5kaK45jhGHoCIyf
      coy++4dh6K7t9/tufFEUYbVa4eTkpKBJaPP3er2CVtOaSI+BFgNwyqA0F4EKDUBJB5xy0mKx
      QBzH6Pf7aLfbdZ/pIyOOYyftgXICpa2nnU6eq9WqhNWuZftr7aGJWapsDcvk0qYSpRifsXz+
      PJ/SWPbNx+Danynri/U8LEERxzHW67V71uxHr9dDv9/fIkJ5f/2cR6ORY5gkSbBarRDHsWuL
      NEZB0Gq1EEWRc4CzLHNBhNFo5AQkfycoMAaDATabDXq9nju2xQBS4lgvMkkSnJycYGdn57H7
      BGmaFgajnVUApeYMUHyZug0Ji+AtovERUxV8zKsdWB6zbHMpjB6l3bOi7DpqZWK1WgGA8xnW
      6/XWc2y1WgVbnJZFmqZuTIx68bowDDEYDNx91ut14ffd3V0EQYAoilz7FNREt9tFv98HAEwm
      k4IZvcUAetAyyiCdwNlshuFw+FgjREmSeMNihOV0AduMoQnYJ/Xlbz5BUMYEMiqlmU+HDbV9
      XOZPWO3qc33HLUfdur9mFsuMLHuOq9UKnU7HERuJnUStHemTkxOsVit3jKYQpfhqtcJoNCqM
      qdvtuqiZRavAqZkTRRG63S7SNHXmFUFnGlAMUMXx8vf1eo08z52D8Ti0gXY25cOXBFEm1X3H
      yohNmzcWE8nf5f8+ItUErpnNMh30swC2NbSPCKx2refBvvMeWjBIKa+ZRLfN66MownA4LFwv
      HXwpEGgK8X3OZjMAp8yhCdeCDv3SV+VxmmX8ncEFx3SlrWP7xRBhGLoIUafTcQM+TwwGA7Ra
      rcKkl3zYPsnGY2WSj6BtWTVenzYhNPEQlq+gCV+ORd/PYgzNiPpesl2rv1XmogVty8t+MIRZ
      9RzzPMdms3Emy2g0QpIkjmCXy2WBOZbLZUGTW36nDpVKLUv65HwHGUTCZADfg/Adl/FWn6R5
      FATBaait3W5jNpu5sJ0mKKuf8ndtPlhSkedoyanv4zMFfPeuGl/VveR4NQHWbVdLSc00lvlE
      0I+w7sl2aerI+2kBRZMmyzIMh0MkSYIoipBlmRnoCILAhYjZD+k0+wRLkiQYjUYFoUnNYo3R
      qwEsu9R6yISclGGY6rzQarUwmUwwn8+dBLEIwpLS/F9/t85hJMkybeR5Zfe25g8sjeEzs3ie
      T2NY7epjvF77T/p+uj8aSZK4cKfPFA2C07j8er1Gt9t15jBDj5x0Yhg7CAKcnJy4dBvNXLLP
      +pnM53PHbMCprc9gQRRFBY0XRRHW67WLmPkY3MsAepB1pBqZ4HGkT1ACyNlQq1/yRUnJp8ei
      X6Y1u8sXSUjiJqNYWqPMfPIdk31jqC+Koi3toM2cs7Srz7U0G49zxjRN061ZV6s95igxGmTd
      g2C4l89ThnVlX/R98jzfynnib5wAC4IA8/ncncNZ9na7vTVJBgBbIRZtHpSpRwt5fhpiOss1
      dcFJEEkAZU6ZJfmtvB62rcea57ljZClVJYNo30T+XyYwfEzIvvgI2eq7r11CT6b5NIceDyel
      GPAo06S+yVG2Z42Hs9lSWFrmls9sk8JMvzciTVNnolvPKbQOkrDkw6tr0kipaXXuk4LSSKpM
      ti+JuIxgygig7AXrZC1LKvMcLaX1M5BMqxnXMrtku9oEq9NuGWSbmpApPdfrtWMEfY10PK3n
      qM1CLdElcXJ2mL9X9V++e4tJ6GNYcyd5nj80gayb6el2X0e0yqLjNJvNkGWZixDQpvwk5lEY
      hphMJi5K0G63nemlX4AVO7fUatnYrDHKe0lzS54rpfpZ5jL4KSMawGnYmVEx/n7WduuA57bb
      bSdsVquVIzBOMNXNC7NMUAlOitF00n1mlK7MXLMEnT6HKRv63qYPoKUoX7DvQVpmRp7n6Ha7
      WC6XLrYLnEqU8Xj8yPlEQRC4SMB6vS7Y6FKKabtcRyZ8aQJ6nD4b29IE+nwtUX0CxSIKnWRG
      v4CaQLer0yOsduX50sySz4FZnlKbMi07CALXr+Vy6XKC5LOqMz8jhQbb0s9bSnbdZ9mGT2PL
      9+TTlgAQ+VSovHkdE0YTAR+cRpIkWC6XbrFCXTAzkRIDAIbDoWOCdrtdkFC6L9p8kSaUHr9F
      4Dpf3bLPfYQnzUifD1IGmmAkQtku++/TCHXAZxpFUWG2drPZ4OTkxL1HJsLN53P0+33nkMoF
      PT6LwTLzOAaf9tRt6Gfigza5JANo/yqSXKU5x2IGC5YDIrlaMwd/q8MElBBJkrjYMRkgDEO0
      222XM6QnSqoku+WcWdf6bHP9ux5vmaSv41tZ7crPsvFUtUtbu9frec0ZJpqRcIbDYeG+jBRx
      cYr8zSc0tRCyzpPj089JPw9LqPm0Aq+R9420qtCdtLhGm0TWy06SxOtYhWHo0lepbi3w4coo
      hPYfaB9mWYbFYrE1ljJzoO4x63gV41ovRvsodTSrbrPqhVchCAKXyCjNQc6UytWBzLuRz5Lv
      ld87nY7LYCUj+Z5rnfGeZSzAw4wE+pY6E1SbTPIYAEQ+e1b+8Xi73cZwOEQcx25KmeaBXpJX
      Z0CMBVsTNsvlsuAYsZ04jnF8fIwsywrpstZALVgvoc5Dt0wgn7aU96r7Qi07VdvUwMPU3l6v
      VyuYoPtIJmLODE0Y5s1nWbaVgyNpQMf5gYeTUOv1emu9SJ7n6PV6hexQ+VsdaAHCiByfg5yE
      WywWhcU0+vlpOonkF8Bv6tAp4qdlHmmGkZ/6uMwfkYyTpinm8/nWIm0J/kbCp5aR9rW8n3b2
      5MOgf2BB245sW0ti/Qz1WK0AgmU2+p4Tj3MOhPHzKjPK1+58Pi/MjnLBPTMvtQSVzO8j2jA8
      XaO8Xq/dbC37xiWJJycnZsZp2RjkO5PPRGaEDodDrFarrTwfy2KQTAR8PBNcVyVvNhssFgsM
      BgPnfGru1B3gMT3b12q1tqIFDJ0y56eu9NREav3O9uUxXwKbhjU2yXT6Nx7T/pXPOeP/8tP3
      XMPwdIH3arVyKSeWlLOYXfdDtiuXOkqhcXJygvV6jeFwiDy3AxsEiV2uEguCwDnNg8GgMEvL
      a6znJwMwUjjn+Wl6BU02+jLa9LEgzXkisuzlsgFK+5D5+v1+3zGHzruQUkbmdkvHS0rOwWDg
      2jkLLD+E0KE5yywo8wesSRZJJJL5rLZkWrev7/y0mFW3S+e0SmjpUCfb0e9HLhihhsjzHOPx
      2C1u4fLEKpAJ6L8RcRy7ChjyeJUAsmbF5W8ATKb0mX4aTgPIi8rAyZFer7d1PM9P12j6fADa
      bFXtM0lqOp1WPqA6/oZOX9CmSpUJYUkpK2nLYkA5/1D2Isra1+1SC1e9XKtdbX5wwouI4xib
      zQbj8dhlcNbVxBK+1GU6y5ZPwD5Rs0qhZQkx3ySj1KaWaVroU5nk1J2vWgFm5dNYHfNBdrgs
      g+88wQdZ1p+64POTi7Dlcc1IZzXx2C5Dv1JDWf04S7sya5OaejabmQlkjwqZ3w/YklsytHz+
      WuNKWO/IN9+ihXwk1bcMJcl8niiKMBgMKhfCcxmarsAVBKfhsirpr9uSjq01COnQMF/Fgi/S
      VOWAnSUnhffRjpeegCMsraFDy7pd2R8dkfKp+7J2ATgpT0nPibD5fG72UfstZ9EOPD9JEhcx
      8hGoNXEpx1B2b0aiuJje0uS8vpAKQamS5zkmk4n7XrdMYhCceuTD4RCbzcaZQ2VSVl8v/+92
      u4VyF9QwZE5Zq2az2XgZQOf4V5k+Zf3ywSIMEmIZI/n+l5pQt8uqBjrt3DcuX7uWxpZLBvV1
      UhqXCY4yUKN0Op3C0kTCRWfEwhdLgAVB4AQzNWOSJOj1ei6IomfO5ViAj30p/QOz8+hdn3Wg
      PJdzBpz1PatTC5wurOHCZpmXzgGzn6xUUQZJhDLltmyGe7nJ8J+/dQ9/+u4hbow7+Fc/+zK+
      9PzAe74PlgaoCj5IDWqh2+3i5OTE1RKynFzLeQfs7Mwy/0X2x8qzkvk6vvHIcfMcWRJSmz4M
      cbMtWgSybVa3A07pjWFiLq2k8Cn1vX74wx/mNE1k47xwMpk8EqcTLHkhV/I8DiwWi62MQvm/
      1gIamgCCIMS//cPv43fevOfO2R+08Z/+5d/CK7vdrWu1CeIzH46OjrC3t2fasVriFvtjt0tp
      VzWXUdWuRJn2stq0zJiq42W+lb6Oq8nkegmroLBkcPa73+87RuOMtWSu0NcZfdNHBdcKP07i
      Bx5GHXx2MY/p3/T5PH5/scEf3bpfuMeDxQZ/KI5JieWzs30qWNu0OlIl8+LLTDaaf/J+ddqt
      YkBLO+rffdbBo5hHZVKaM79MxpN1gXz3Z1uLxcL9xXHsUj2YQhPpgWswD/28IG1QDu484Mtc
      1eFEyyHyEamtKR7+X+aMWQ6pb3WUtRa5rF/aJ+h0Oq5+qzZhtGaSfdcCoU7K+6Pa/hK+mfE6
      tCCLHFsal32Ux2SqDMOvTgNUDeo8JXeen84TzOdzTKdTNzX+qODaUpbEA6pj+xbkiibgdMzX
      hm38g5/YL5y304vwj14tHrMcRd0ez9HzAYQ8XsaM1sor4FQL0PmziFy3a93HYjrtL+kcoTIz
      xoI23/T95Pgss0z2m0W0rPH4+mWdV7oiDDj12s+zIC5Draz3M5vN3MKKqjCrHthms3GxZalR
      LPtW+wIygc8XIv03//izuD7q4M8+doK/+vor+LH97VCulChl+TnSZNLmjWWq6WstQpZjs9qo
      ale3pZ8Hx8ZK0O122+VqWf6F7x6y/5a246fUhrJfst1er+dKHDLyV0d7yvs4RuIPvlm1zWaD
      6XR6LrVAgyBwOeUAXIKUz9zQHWdZlOFwiDRNC2FP+cI1gVkqV66skpI0mR/gR8s+lnduovvi
      F/Gv/+GP4V98doV3HuT4mU/v4P7t99B97gXcfON/4yde+7u4Nirm0leZCFIDSBOpDnGWndNq
      tQrOXZ12y+6lv7NcYa/Xc6vTrNlqX5tlcxGSKH2pDzyHWZ8Atoov1BnzllbmD5YULFNJ54Eo
      ijCZTNDv9yvXmK7Xa+fsnZycuMw/y1G0nDdL7W6pxCzGH/3Of8Aff/Ob+MZbd/Enf/AHAIDZ
      bIn/+z++joPDQ/zHf/fv8ef/609w9yTF1/7rH51ep9qWz0tKfcIyuWhq+J55WbuScOq2q9uR
      z0UTFT/jOMZ0OjXj9xq6/V6vh9FohNFo5JhIjs1nokn/KQiKZWrKIkE+6HuF1g86MzDLssKq
      +vNEHQmV58UsREpuH0FYxFNHKhy8+ybe/P59/M0730Mw2kWWnPoVN175NF55cYz/9rX/goN1
      ipNwH+n0DhYn23tOyfZ4b73kz8ojAuw1wxYx6nal1rNMAKtdHbPXzCPvr4Ufv7daLZce4zPP
      6Duw3Dn/dGCl6h0xm5g7xXCJrL7e145P6G3NAzDlgTdYr9eujuPjDmX6wFllQqfL8tOyewG/
      fasRhiHyox/gzz/oYPH2/0T/Mz+DSWsJLO/j7btL/LN/+k9w/+ZfIH/pU/iLb3wDr/6dn8dP
      feaGl5gszXN4eOhKelM6y8kafU3ddkmoTJPm8bJ2dXuW/+DrB/+n9l6tVm7ZqjyPWp7gOmNL
      SPnGqPvOcKZ1fRlMK+DOnTs57SpyqXZstNR6ksjzHNPptHQ7H0nYVnjVZxdqySn9AT4sFlcl
      dDvWgm7tCMvjx8fHhYkwS8pLQtRS22pXXrNcLgs7qPjalX2XjFLnXevwqtzeabFYuCWsXPQU
      hqEj+ipLQvfZCm/L5Zfsz1lWx9F/abfbp0sih8NhYS2oRJVqetyQ9R8l5MvSee/S5mWJQR8s
      U0Heg6W75TFfCq60x3lvPX1fBtl/3ba0863dcIh2u+3q+MhkM+2IAuVCosyZZD8YSFgsFm6D
      CpbL5+RVEAQF/60K1nv0MSTPZT/qmLkyB6rdbiPs9/vnXsz2vJDn+VY1MkISmlanMq4uid9n
      T1sOoQV5T3mtj/mscuHyf03svsVEsl2+cKtd3pPxcc4LyFi+HqelJazn4TOHyGhSm8hdGWm+
      +p6r9tksM8vSXry31beyPvN69jG6jIRPZFlWS3LIgVkPSkITlZTolh1qtWURCvugIzwACrn7
      ss9l49D9sNq1dtDh9XIzPZ12bNrChlklv+vxA6fvZzAYbDm0/J0Oq2WeWO2XmXhW38u0VhnD
      hWHowqmVG2RcJCjNGIOuWnBTB9qEsV6uZgBfO742tA1flQ5dlkVpST+2qwlLtyszabUmrBJ8
      Pvub0RiuAKS2kdcxG1NXcrbuK323KiHhWytste8bIzWW29Wy9ClcAtA8802YlRGihpY0ZefQ
      N2q1Wq4wrLynNAHKpI1u22fO+a4t+63qnpSmkgHKTB4tPa0+ZtnpBhe6EBbPl2Yr27cCE5Yj
      bo1FPmtrEZCEFgD6mfBTOtCXngEoyViFIgyLFQDqcL3VpvyUoGTl9j2z2WxLEtJ+DILAraHV
      5kqZ2ud5Vf4Gr5GEVJb2bB2jHc68qSiKXCEpWVrEp50sgTOdTp12ZklKhkClH6P9I6u/+t4+
      X4O/WSYb35lccC/vzTbpmMuUmyfCAGX5MXUgl2gC2yXR65pE8oGU9YVVLpbLpZOg8h6ycnKn
      03GlQ3hunXGWOX0aQRA4oq0L6ZTzhff7fWRZ5paPltn5sh3pqErJvVgsvJpKE75FA2UmjL6/
      zN3S4MowWSdKti/9Mx3weWIMwOJLZ7mGS9pk+UO5bLNMkvvMHOnASSIhoihCFEUFScLzqYK5
      UXSr1XJraQeDgZOA7Kv1smkbc+MGKUV9Y9HaxRq3JFSdFiHLi+sIkuVESoKzBJdvxllCP1ee
      p5Pd9LPRYU9tvlgMwndWtiqQz0bT4BNhAMaI64BOFFV2GIbY29vDZDIpbHTAFy0JQi/hk58W
      4VjOKmuVyuiTfmmdTsetdOv1eoUXxo2a2S6XbPJeURRhOp064uJSzyrQ9JN2sFyiSEItk7AS
      XG8tJaIULNb7qmpbL5mUx8rMmzLilkwtz5VgAV+fdpfHddTsifkAdc0f2vxy1Q/wMO+Ea0C5
      Fy3L/GlpLh8egC1mkcQiHzKlP6V8lmWubLisZgfArGrAukbygZNZ4jjGzs6OOzdNU3zwwQfu
      u57c0sQTBA8Xetc1AWUbhGQgqel0W/QZqqAJWd9H3pubWPO41jgWNFHrHKB+v4/j4+OtqJOG
      9b4upRPMXSG13RiGocsroYTq9/uFhTWa0CXYVqvVciVcqHEAuBVVPIcvhQv86zCxJYmpolkJ
      gXb4fD7Hc889h+PjY+zv7xdmkB88eIAgOJ2tHI/Hpq9Q1h9LImqClGkvPmeVJoMlWUm4t27d
      QpZl+MIXvrBlzlm+Dot65XmOw8PDrdQQ2b5uR/Yrz3NnXXBDbN9zyfPc1LQXk+BTE1pykTB1
      3R3+JhlFHtMEMx6PXQWBk5MThOFp0S8dY+Y61DLil1pG98MaT6/Xc2YWX+DOzg4ePHjgHP2j
      oyPs7Ozg+vXr2Gw2BclYlaeT5/mWI+4LNcrnozWPjuT4xvOtb30Ln//85/HFL34R77//Pjab
      DW7fvo379+9js9ng3r17uHPnDsIwxIcffoi7d++6qN7t27dx+/ZtpGmK27dvO6bX/fOZeABc
      pE5WgrD6S3NzawylT/MpgF4Qzs+yFzebzXB8fOzKrOs9Ciihx+Px1jpbjTKCL0Or1cLu7q7L
      phyNRpjP564uJyM3vV4PBwcHhb5VQaeKl9nPJHiOw5fZ6kOWZW5F36uvvorj42Ps7u7ir//6
      r3Hv3j2sVis8ePAAi8XC+UK3bt3CW2+9hRdeeAFJkrgEwZs3bxacVI5BrqX2CRufBtNj3XpW
      paN7CiCT+GjjyQdl2aXMkeF1XOQBPKxfOhwOXQHaxwU63ZPJBL1eD7PZDK1WC/v7D9cdj8dj
      dLtdt/mHZeL5iFSnT/jO0z6F1qD8P8uK2xnxN0a/3n77bdy7d88xcZ7n2N3dxXA4xGw2w8HB
      gYt+cUa20+ng7t27bkNFX4ULadLJcVvrpMvemWQmAAiOjo5y6Zg9bWBxJJZepKqbzWaujDtt
      P6pJa9ndeDwubAf0pBHHsSMcZlNyPfZ6vcbR0RHa7bbLTpX99L1wnicjR2cZHzeeIKyw6WKx
      wHvvvYcsy/C5z30ODx48cOXLX3rpJXQ6HSwWCwyHQ7zzzjsYDAaFTVb4zliR7stf/rKZ9yT7
      LvtVFv3R4PU0mweDwdPPAD57b7FYuNKBaZq6StPWQ+ICFUZqzrqB33kgz0/r3s/ncwBwO5tz
      djPLMhwcHODatWumlKvz8uuMSTqSFgOUtV3GiIPBAKvVqiCQLKdaHud3RvziOHYh8vNYEDMc
      Dp9+E0g7cnwQzEuXdi1QdPJoazNWz805Htfyz6pxdDod7O7uYjAYuPCrnIza3d11qRnSNJGh
      RGkra7tZhj/1M5Hn6d/46bun/K7bo9RdrVbezTWsfkozj9tB8ZiM+9dhfJkOLplrvV5fzjDo
      ecOql0P7m5NazHBkHP+iwHkDpl/wjxEpliSRs7vSfq+SinU0gTXTa4VUfTPCvvAnq9hZ2kv3
      S5p31OLcqSbLMqzX61opNtqHkEiS5OnXAHVAiSYXqnAZXxzHLoymsz4vCv1+v7DSDXioISaT
      CY6Pj7cks3QIy2ARSxmRyEiMPpfffRE333HdT+s8OT4us2RpRO0IS1hRJAo8qx/PNAPk+eki
      cZbx4EKIyWTiZny5EXTZ3ldPGpwvAB4SfpIkzqehfa6vkeZSXR/GIhJLQsu8fR2R0blH1Kg6
      /VmaIZpw9T3lXASzWbn2gAt9tNkUBNvV6yTDWqbehZpAdafaHxXct0zaopSuQHFSSe41cBlA
      gmYeEmdPOWl3fHzs3XDEIjApsS1i8y2u8TFS2TyBj8h999ORJZo9+hqtobTmIvH77qv7F4bh
      xWqAx0n8dHIIPdvL+3MqnWHQJx398YEpvgBcmRrOBcgyJIDtRMrj+n/CMg90G9bxMgkrj/k0
      ETVVnVltfoZh6HJ9ZFlG/nEDPq4/rtIw7MeFO8FnrZxQBRI+Y/4A3ByBdm7zPHca4bJIfoIa
      gImBdB4ZHXrppZdw7949PP/88+ZqL2B7gkvDJ+UthmJbvnYkI/gS2+T9WIaHyY3y3vJ/GdXj
      piBJkhRsfTrJslSiz9nXxy6cAc5z0inLMpycnBRK93GDBOthUBVfFqlvIYoiF7bk/+zzCy+8
      gMPDQ4Rh6OYyNM46tjLp7osqyf/rCpPNZuPyouQG15oppZaaz+eFTVB4jqwObo3D6id/v3An
      +CwOmw98QZxN5DFOt1PD6OiDte3OZQMjHzJTVM5YX79+HcPhEPfu3dt6yVqSS+jImLxOf5em
      xlYqQc04vAb39qoC7zOfz92qO2k+6fGV+TrW+ReuAT4J8jx3U+oyB1/uJmItxI7juPbGfxcN
      qcm4lelyuXQTQ5y/kDvkWMSpIzc+80cfL2uDx6pSMuQ1ZAhunM2Z77LxlzGbJdhkP7VG03lU
      TyUD8IEwjMmwINcL+JxrDrzOCqzLBBex+JjQdP1NoJjE5nMAZfiPocu6a6q1Q1pWzcG6N6+l
      ZE6SxGWIll3rM70ILpOtE1CxltM+lQwAPCR+4FQ6stoBsJ1T8qwgz09nU2U2KzUB8HC1lbaf
      9VLRsspyvuPSCZaEXIcR9My11MTyXemIlcU8+jsdatmuT7vpEop5nj9dDJBlmVuETieKK7bk
      zKncR+pZAcOfHNt6vXalW5bLpXOSLSdWfy8TEJpArOtJrNrUkPMtBUczLO7EY1KUBlMAABdl
      SURBVJlSEr5UDN33Ku0g2/fd76lhgDRN3QIWxu3lajD5WScl4GkFq73lee7WKS8WC+zt7QGw
      7V8tOeXno2hJ7WdYTGcxkRVeJXNIxqkyycqiUta5ui9PpQnEkthMVZbSRuMi8vmfBGi+0Mkn
      RqNRYd5D2vo+jaBj91pCVkXntO+gCU1rCW06yf5YIUt9fys6pX0YrXHkMX0Ov19qBmCUJwgC
      M6JTx3l71sC1AZzBpl3LPcJkyJdEVKYNpNa0zrdQRrjyk+f4CF4v7CF8jrlkDG1Osf8seEBT
      WV6rTbNLmw7NWT2mJ5eF164a5M6YzGiVsXZL5QdBUKgpJJ+bJnxfYSq2U4UyweTTGPr6sqoe
      ZW2x4nOZYOS5XFRzqWwFmZUpIx1V6vgqQW5Zy+gH6xXJcKl+blUpDPwOFBlH19qUzKaP87ue
      pOI12gbX71RqBMuB19dwiSgnNHu9npv1t+iFjLVarR7uFF/+uJ8cKPU5obOzs3PpZ2kvAizS
      JUufMBRIKa+LipGo9NamPEdKTOmIsoYo/S/LPCozmbRJReledv+675vmDkudy70SGBXUC/hJ
      /Pw9z/OL1QAMWeb5ad7+YDBAr9dDv9+/9Dk6FwWqevpHPNbv990ezJYJYdnnPkgmoUSlk62l
      qzS9fHY7+yg/rXGdxa+jxJfjovXAFBjdD0n8PHYhDECVyIUTQHENb4NysDq1LstOaShnhfkb
      YO8FbUlvTbRMtaADboUTpbbxRWzKNIXPLPKBJVSo3bjwyUV3lC/A8/RzCeUJ54k8L+4IqNe4
      5nnu1Hlj458NQRAUqstJdLtdtxG1lZlp2dZV0ptRJ+6FYPVHX8P/rYS3KgfXgkzCoym1WCwK
      uURyjYSU9PIeOvxragDt6OiB+a7hYPP8dB0ny4DrTlzG/PunDUEQoNfrFeL/wMNtpRgi1Xsb
      6DZ8xa4IKZlHo5EzvcqkOa8D4LT6JxVylp/APkhLgmsC6BeVoeAEW5JBTibIhCPamHEcO6dL
      lvEAsLU2syH48weXSvp+s5YRSmgTpsy55f+9Xs9te2otMJLmljaldMGrszCEzHmS92LYliYh
      q0fQR5BrQyRcP62bSY6VizH0xQzJtdttdLtdFymglG9Mm8cP6xkzQlKltX3mT9U749yD3rxc
      Jtxpc1dORNW5hwUr45X5Yf1+Hzs7OwiC06JoZIwqwVvqBFON6IkRPSOnKzY3uHhEUbS1HZAV
      l5fCSp5TBVlPSbYvoe1trVH0n25DHitj0tVq5Sr/cV0IV47pXSw1akWBLAnT4PKCBB6GoXd3
      SB11sRIIpSWgzSOGY1erVUGq+0wq2QeLnnwhUB9D6vbpg+q2qpj5zGHQxqx5OsAICSNG0oSl
      1rYcyzrvl2YxfQLW6ZHQkr2KyOWnhp4Qlf6pxHK5LNR11Q652XbZQBs8nZBhUtZGonRk2oTe
      RMNnhsjf+aklPQv4WvF/niP/fM5xXTC6pcGIF5l7tVoVFtzrvl3YRFiDxw/WQdK7IuZ57oIX
      lgbQ/8tjWqLzkxJam1k+baIjS7JQmWVq+a63MJ/P3VwA/QAZmZKOehAEDQM8y2i3264AMEEi
      HQwGWwuKtNmiUWZK+PzEsjkI/n6eJrXUDHo83W7XhY1d4t253bnBpQTNIRmzp83OYlPyXJ/U
      ZRjTiuwQvllfbVpJwvSFYuV960SlqpiWk7PtdruQfXBpskEbPD5w7cBqtXIFpNbrtauwdnR0
      VCBGoo5klhI8juNC2FxL9zzPCwv3tZaoGzUCsDURV6WdsixDkiS4ceNGoV8NA1wRMGLD7VlJ
      EMzt2dvbq70xCAmdRKfngLTDLP+vYirNNHJHGWtMvut07adWq4XVaoUf/OAHLlUkz5+yqhAN
      Phk4sTkcDnHnzh1XVYPlIwlf3o3MsWHB3jzPzZwbTfyyPU2sMn1b/8Z7+eBrW5diAeCSBGez
      mfu9YYAriFarheFw6LYt2t/f3yKksno/lrlkoWziS3/nxJ2VLnFWR5nnW2XY2+12YRfOxgm+
      gqAU5yIaJpEB9iwxr9F2O+cTqiBTL3yoSscou9aav2AhYd9ch7tvZe8bPHNgZEjG4K39ecsk
      NxlA779mnQsUN+v2RXbc5JRHE/jGYiVeSua00ibced6WGzzToH1sEUadsCNNoH6/X8gHkm35
      iE5/LyPwOn3R/eJ1VnWLLUY5U+sNnhnIDF6pCfi9Dngdk+J0SoP0IyxtotMv6lR5rpoX0HMN
      +jd9vGGAKwo6hPpYXULT5gYrSFjn6IkvX3s6FUKnWFSZRFVaRaZvEE0U6AqDdZjSNHUxcy1t
      WbxAmzMslULIcizAdgRHtmsxmY+oufjduta6j8Z6vTbXB/OahgGuMGRatNyDTJ+j4/ysTi2r
      yDETkzO0dUOX1DqW9GZfdMl3WbvImj3mMW4tazE28PGEXr1H1eBZhJwl5XdOcFnmApHn+dbs
      L80VvUeBJD5J5FKCy+hPwT5X0R3pq2gfwkqt4Lpoa6IuCIJmIuyqQzqpes131USXJuogKBbs
      0jVdtX+g2/Fhs9k4U0tOmPG77LNukwvlNdhOmqYNA1xl6IK6OiVBfhKU8gyjaknO61mGMU1T
      Vz1Er02Q964DS4NY7ZCBZckXa+f6MLzgjbIbXCx07rxVSEqDktM3UZXnuZO8rBohSxjKSTY9
      iWX9yb7Ivc2qokrSDJKfsr0oihoNcJWhCck3OytNIhLOZrPZkuiSaK1qDHUkveUb8LhezVXX
      RCvLSWoY4IpCT1KVEb+WtmmaotvtFvYWsNqU0CYS2+dv+p4a2jQrg3UPHxoGuKLQ5Q2rpLNk
      AivGL9uoQ8B1rvUxEhnNcoZ1n+UcgoWGAa4gLMKw4vB183V4rvQLysyOsskvrXHyPC9EkHza
      Qv7PuQ2WTCzbZahhgCsKH/HRwS2boOL/2iYnyqI18nqLESzpzvCqb06Cn3ICDDitEyQLg1l9
      bBjgCkISL1AkIl/KAK8jdElEvQEdj1sRmzJt4uuXD9pJ58w1nXVr/kG22zDAFUW323X1NH2w
      KkDTBufmFNK5ldJba4+qsKU8j/cBsDUrPZ1O3QbhdMZ5z6OjI7fay1rfPJ/PMRqN3PcwDBsG
      uKrgxFSZU8rZVP4OPCx7riNAAFyx3Ha7jfF47Mqo0463nGcdHdKMIxfSZFmGd999F1/5yldw
      eHiIzWaD69evYzabYW9vD2EY4sMPP8RkMkGSJFgul5hMJq5C3Pvvv4/XXnut8ByaibArDhIW
      /9dRHhlH5zHAjtDodofDYSHFQsf19XZL+nerj7w3j7/xxhvI8xw3b97E9773PZeK8fbbbyNJ
      Ety+fRs3b95EmqauJIxso9EAVxSSqLQ05jF5rvXdMp943nK5LFRlCIKHW64C2Eqnlv2Q32lu
      8Ttnr5l0t7OzgxdffBE//OEPAcBptfl8jul06pZ+Pv/88/jggw8KYwAaBriy0M4hMyetFARf
      rN6nAUiox8fH7hg31SCYMqHvo9uU6Q9BEGA8HuOtt95CkiR47bXX3Eq0yWSCPM8xGAwwnU6x
      v7+POI6xv7+P/f19vP322wjD0M1/OG13dHSU7+zsPMozbPAUI0mSAoES0rzQuf1VDizXBFTt
      zUUzxSp45WMAXscFPG6f348ZV+8cI89nUt5wONwy9xoNcEURRRFGo1FhUzlqAMs5rRPBqYLl
      P1Qxl9RAeZ7j7t27ODg4wAsvvIBXXnkFy+Vyq6gXNw2X7adpisVi4SpjuyS5TzSiBk819OIS
      y7QpK5D1qJDOrkX8vm2XgiDA3bt38frrr2Oz2eDw8BBvvPEG0jTFe++9hw8//BB37tzBbDbD
      /fv38d577wEA7t+/j9u3bwPYLuPYMMAVhkw70H/y9/O+Z938I6DIpK1WCy+++CK+8Y1vYLVa
      YTQaYXd3F/P5HHt7e/irv/orjMdjhGGId955B/1+H9/97ndx69YtDAYDZFlWcMSBhgGuNLin
      MGBXhEhbKabJFKtsZc4QnxVWKoJmMGnXy+vok2w2G7z++uuI4xjL5RJhGOLOnTs4OTlxvoDc
      DefatWt49dVXcXx8jLt3727dr/EBrjCCIEC/30ee5y5GHgQBglaA3373t/G73/9dHKwOcK13
      Db/y2V/Br/34r+E811DRQdV9stInpKP77W9/G4PBAKPRCFmW4caNG5hOp3jxxRcxHo8xnU5x
      /fp1fPTRR/j0pz+NDz/8EHme47nnntsql9hEgRogTVPM53PnOP7WO7+F33z7N7fO+/Uv/Dq+
      +upX3XftGNeJApGwudZXm0Ha8QaKq8GSJNmqH6SL4Or22Ia8L+/TmEAN0Gq1XEhynszxtR98
      zTzv9//m93EcH5uTZUSVXa9NrTrX6/W8WorrahKEL8LEc7Msa0ygBqdot9unOTPJAvdX981z
      DteHmG6m6GbdwjpfGYPXm2f4oBfkWLByhkj8OswpIc2oKoZsGKABgNN5gcFggF7cw05nBw/W
      D7bOGbfHGLVHiMIIq9XKxd+lRuh0Olub7xFac9TZ+YXX0bzq9XpbGkBf55sYA04ZT6ZONyZQ
      A4cwDDFpT/DLn/5l8/df/NQvYq+z51ZayXQKVosAqhPlLEip7ftts9kgjmOs12vEcey+cztU
      CSvxDjhNAeH16/W60QANHiKKInS7XXz11a8izmJ8/f2vY7aZYRSN8Auf+gX8xk/+BoCHJg+Z
      oNvtuiWWdcKl1sbYlMhloNMs84qCINhiAL04R85ndDqd4s6YTRSoAW13/k+COlgd4Dg+xqQ9
      wY3+jS3pzHTmOI7dSqwqIqY01nU7+Zuv3hAXuMjNM/g7mVDeQ1/PY3EcF85tNEADAMDdW3+J
      r/3xX+BLX/ki3v3OtxE992X86i/9LL75e7+H9gs/jU/13sJfvnOMn/vKy/jv3/wufv6f/yo+
      t991+wPM53NvKBIoRmSsxfMEN6/TKRiaUXwmVlWESjvHjQ/QAADwZ//nLxG1Q1x76VV89sY+
      fu7nfgbIFrj/4QLzkxO8/Z0f4cWdFH/65/8P114Y4k++/q0Ccfb7fdO0IXROj/7NxeWFdLck
      uEXYVhpHWT/kOQ0DNAAA7HX7GI1C3Hzne7i76OOVSQvz6RI//ff+Pt5/5zto9VJ8cH+Gn3rt
      b6O1nOPFH3u5cD33B9CS3Ue4es2BZCb+SWKVaxV0W2EYuh0vqxhga71D4wM0yPMcR/c/wHe+
      +x5+/NUfx8lyjeu7A7z55nfw/F4PcWcfzw+B2x8t8dmXd3HrnTv44pd+EkGeFlKpfbO7FriR
      NeGT7PyN6405y2xpETIga5Lm+emiG/oPNK0aJ7hBASSaqnMAeCUtK0BLP6DMVuc8Qtl6AMkA
      JG4fA2gwz4iLetgGGY/M1zjBDRAE2/uFEdrxjKIIx8fHBbvdSm+WDCK1hC5n6LP1+b9v8z49
      O6wdcH7X2zgNBgPM53PXXsMADUqh83YYhlytVk6icqZ2d3d3K8IjibhO+XXJVCRuPaur0yJY
      CrEqrYKfrVarWRHW4GyQGZjdbhdJkqDVamEymWBvbw+9Xg9HR0eFYlskMt9m2sB2ORTJcNb/
      /C7bt9YUWMdd6PPjvdGawlgNHgndbhd7e3tYrVZOWo/HY1cM6/Dw0OXtjEYj7+RYlmWYz+eO
      UDebDYbD4VZ5RDKANtMsxijLNOVxWY+oYYAGZwaJUaYg9Ho9d5ypCuv1Gh999FEh3ZrYbDbO
      od7Z2XHbGU2nU1y7ds2sEarXCletJfBNhnHFWbNJXoNHRqfTQbvdLkSPuLosjmOcnJyg1+uh
      3+8Xtksi6KSyeBajO7u7u/joo4+2mEDa+vyuoecWCG0StdttbDabxgRq8Ojg7C8jKrJYbqfT
      wWKxcKZGFEWm+aL/JyPs7e3h4OAA+/v7het8Up/Xyr5J00k71nTMmxVhDT4Roihyklza1UEQ
      OJOIf/J3Qs/sSgn93HPP4fDwcCviY7Xj+65DrVbdo0YDNHhkhGGIdrvtJsaYaUlfwDJJJBFq
      yOM0dzihlWUZlsslZrOZY7DxeLw1D1En2iRngxsGaPCJwLIq6/UaJycnLpuz2+2i2+0WIkU6
      E7PKYd3f38fBwQF2d3fR6XScgxwEgQu5TiaTQhtlWaCtVstFpZp5gAZnhtxXmAiCAIPBAMPh
      EEFwujjFitoQvpCo1Xan08GNGzewWCzwox/9CKPRyMXvr127hjiOtwpd+cA5i06n49YthGH4
      6LlAVTNvDa4eqAUAOPOEJVekCQT4UyB8xyz/IU1T3L9/Hzdu3PC2QW3EmqAan1gDVKWfNni2
      IbMwZT0gblDX6XQwGAzcuYzDa1jmizSdpMMsZ3Tb7bZjOj2rzALAvV7Pq3kemQGsBKgGVw+M
      z69WKxcSBU5NGsb+e72em+E9C73ohS5W2sTe3h7m87nzNYgwDJ3JVIbGB2jwicHYP0OUjArN
      53MX9el2u26vActq0MTNdq2YvrxGlkakdmF/6izQbxigwbmg1WphZ2fHhUGBU3ufRWsBYDgc
      ul0afZpAE7ictJL/EzpzlPCld2s0DNDg3BCGIYbDIfb3913uD3N+gIeaYjweb11bx6Quyxzd
      2dnBwcEB1uu1V8tYeKzzAFUJSw2ePVAic4fIxWKBzWbj5gfK1gDIT0p7SeyczdX3YuZpq9XC
      8fEx4jjGbDbDZz7zmUpae6wM0BD61QWlPTM+ubCFTrPcA0ASP79bGsGX/sxj7XYb169fL02Y
      03jiJlAdFdfg6UHV+yKRLxaLQprDzs4ORqNRQeLLNmUGp5xY0yFRXx6QZWZZaHyABo8VDENy
      d0cpnVmm0JoDsJLeqDlkTo9mFDJI1U6VxKViAF8uR4PLi7L3RaeYiWcsTCvR7/fdZtbS7KG5
      pEOhvjAp/+dyx7p0dKkYoMGzhyiKXPgzjmO3ToCQE2X8zk8SMwCTqKMoKkSCNHPUwVPDAI1/
      8HSj3W47u3yxWGz93ul0XO1/vuv5fI4333wTq9UKN2/edNEkSnwuwI/jGFmWOe1ylg39npp0
      6LKJk8ZsuvygXd7pdLw7xPf7faRp6jaxYHbpYrFAFEW4desWwjDE9evXcXR0hH6/75ZP3rlz
      B1EU4eWXX/ZuvGHhqdEAPvjiyo22uHwIggCj0ah0ZxiZvxMEAV5++WXcv3/fxfl7vZ7bKI/a
      4vj4GFmWuXygqvwfiadGA9QBCX+1WrmFGg2eLnA12Xq9dluh8rjcGokTZawmAcDtIrnZbGq/
      /2eKAQg5eEqL89joucHjBZc/cscZbrvkM3HpDyRJgiiKHCNIP6EKzxRV6PAZ8NBHoKPUmEaX
      FxRSLLKrJ8fk//K7LJjLsOhms6l3z/Po+GUGF2dHUYQkSQqVyBpcLkgCZr0hnRKhV4npRTKE
      XJpZhmeeAQiuHhqPx42TfMmxWq0qd5upMnGSJDHDrRpXhgGAh47UdDrFbDYrfcgNLg5WeoRO
      g5b5/z6Bxu1Qy3ClGAB4+PC4ZK/Bk8FZtG6r1XJVJizQ19O7RVrg+gAfnskoUBX6/X7tJXMN
      zgcMW9ZFt9tFFEVYr9db+wBbGaA+RthsNoVtVLfSqZstkhqcB6ok8SeZsZflVqr6APgnR6Mo
      wmQyQZZlLip4JTVAgyePT5KuwmJWLITlqw9qrQ+Q90/TFIeHh+584IqaQA3OH48zH4vpDf1+
      H/1+30V4tA+ni99KaAeaxxojuMFThyiKMB6PMRgMtibBqtKj9bEL1wBnWb/ZoAHBdQTcr2y9
      XiPLMlelzqInK6x64QzQEH6DTwImz7Ho1nq9xnK5NJdTDgYDV2adOUYXzgANGpwXqBXa7XYh
      0sM1CLJ6xHw+P02iu+A+N2hw7mAyna86XBiGGI/HWCwWjRPc4GoiCE73NWgYoMGVRRA0m+Q1
      uOJoGKDBlUbDAA2uNBoGaHCl0TBAgyuNhgEaXGk0DNDgSqNhgAYXgstSlKBhgAZXGg0DNLgQ
      XJYs4IYBGlxpNAzQ4EqjYYAGVxoNAzS40mgYoMGVRsMADa40ouVyedF9aNDgwvD/AUc/WwOi
      h0sRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Medicare Payments vs. State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Payment vs. State' width='192'>
      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
      PT9ZehiGBAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
